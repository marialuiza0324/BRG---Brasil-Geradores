#include "FINR140b.CH"
#Include "PROTHEUS.Ch"
#INCLUDE "fwcommand.ch"

#DEFINE DESCRICAO	1
#DEFINE ORIG		2
#DEFINE PAGAR		3
#DEFINE RECEB		4
#DEFINE DISPO		5
                               
#DEFINE DISPONIVEL	2

#DEFINE DT_VENC		1
#DEFINE PREFIXO		2
#DEFINE TITUL		3
#DEFINE TIPO		4
#DEFINE EMISSAO		5
#DEFINE FORNEC		6
#DEFINE NOM_FORNEC	7
#DEFINE HISTORICO	8
#DEFINE VL_ORIG		9
#DEFINE VL_PAG		10
#DEFINE VL_REC		11
#DEFINE VL_DIS		12
#DEFINE TAXA		13
#DEFINE OBSERV		14
#DEFINE DESC_TOTAL	15

Static _oFINR1401
Static _oFINR1402

Static lFWCodFil := .T.
Static nTamFilial:= IIf( lFWCodFil, FWGETTAMFILIAL, 2 )
Static lGestao   := ( nTamFilial > 2 )

// 17/08/2009 - Compilacao para o campo filial de 4 posicoes
// 18/08/2009 - Compilacao para o campo filial de 4 posicoes

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ FINR140	³ Autor ³ Daniel Tadashi Batori ³ Data ³ 12.09.06 			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Fluxo de Caixa Analitico												³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ FINR140(void)														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function Finr140b()
Local oReport
Private aAplicSeh
	oReport := ReportDef()
	oReport:PrintDialog()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ReportDef³ Autor ³ Daniel Batori         ³ Data ³ 11.08.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Definicao do layout do Relatorio							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ReportDef(void)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ReportDef()
Local oReport  
Local oSection1, oSection2, oSection3, oSection4
Local nTamDesc
Local cPictVal
Local nTamVal, nTamTit
Local oSecFil	:= Nil

oReport := TReport():New("FINR140",STR0004,"FIN140",{|oReport| ReportPrint(oReport)},STR0001+STR0002+STR0003)
oReport:SetLandScape(.T.) 
oReport:DisableOrientation()
/*
GESTAO - inicio */
oReport:SetUseGC(.F.)
/* GESTAO - fim
*/
 
pergunte("FIN140",.T.)

aAplicSeh := Aplicacoes(mv_par03==1,MV_PAR02)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros								  ³
//³ mv_par01				// Nro de Dias 								  ³
//³ mv_par02				// Moeda 										  ³
//³ mv_par03				// Imprime Por Filial ou Empresa 		  ³
//³ mv_par04				// Considera Pedidos de Vendas			  ³
//³ mv_par05				// Considera Pedidos de Compras			  ³
//³ mv_par06				// Considera Vencidos						  ³
//³ mv_par07				// Considera Comissoes						  ³
//³ mv_par08				// Considera Moedas							  ³
//³ mv_par09				// Do Prefixo       							  ³
//³ mv_par10				// At‚ o Prefixo       						  ³
//³ mv_par11				// Retroativo?         						  ³ 
//³ mv_par12				// Outras Moedas?    				        ³
//³ mv_par13				// Lista abatimentos?				        ³
//³ mv_par14   			// Tit. Emissao Futura                   ³
//³ mv_par15   			// Considera limite de credito ?			  ³
//³ mv_par16   			// Tipo de Saldo ?							  ³
//³                        (Normal/Conciliado/Nao Conciliado)	  ³
//³ mv_par17   			// Compoe Saldo por?		(Data da Baixa/  ³
//³                        Data de Credito/Data Digitacao)   	  ³
//³ mv_par19   			// Lista Estorno?		                       ³
//³ mv_par20   			// Visao Gerencial Financeira            ³
//³ mv_par21   			// Considera Solic. Fundo                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

nTamTit  := TamSX3("E2_NUM")[1] + TamSX3("E2_PARCELA")[1]
cPictVal := PesqPict("SE2","E2_VALOR")
nTamVal  := TamSX3("E2_VALOR")[1]+6
nTamHist := IIf(cPaisLoc=="BRA",21,22) //Define o tamanho da coluna Historico de acordo com a localizacao para que os valores sejam alinhados corretamente

oSection1 := TRSection():New(oReport,STR0004,{"SE2"},) //"Fluxo de Caixa Analitico"
TRCell():New(oSection1,"DESCRIC",,,,112,.F.,) 
TRCell():New(oSection1,"VL_ORIGI",,STR0037,cPictVal,nTamVal+20,.F.,)  	//"Valor Original"
TRCell():New(oSection1,"VL_PAGAR",,STR0038,cPictVal,nTamVal,.F.,)  		//"a Pagar"
TRCell():New(oSection1,"VL_RECEB",,STR0039,cPictVal,nTamVal+1,.F.,)  	//"a Receber"
TRCell():New(oSection1,"VL_DISPO",,STR0040,cPictVal,nTamVal,.F.,) 		//"Disponivel"oSection1:SetHeaderSection(.F.)
TRCell():New(oSection1,"OBSERVACAO",,STR0042,cPictVal,nTamVal,.F.,) 		

oSection1:SetHeaderSection(.F.)
oSection1:Setnofilter("SE2")  

oSection2 := TRSection():New(oReport,STR0043,{"SE2"},)  //"Descricao"
TRCell():New(oSection2,"DESCRIC",,,,155,.F.,) 
TRCell():New(oSection2,"VL_DISPO",,STR0040,cPictVal,20,.F.,)  //"Disponivel"
oSection2:SetHeaderSection(.F.)
oSection2:Setnofilter("SE2")

	If (Empty(MV_PAR20))
		oSection3 := TRSection():New(oReport,STR0044,{"SE2","SE1"},)  //"Total"
		TRCell():New(oSection3,"TOTAL",,,,97,.F.,)
		TRCell():New(oSection3,"E2_VENCREA","SE2",STR0029,,,.F.,)  //"Data Ref"
		TRCell():New(oSection3,"E2_PREFIXO","SE2",STR0030,,,.F.,) //"Prf"
		TRCell():New(oSection3,"TITULO",,STR0031,,nTamTit,.F.,) //"Numero-PC"
		TRCell():New(oSection3,"E2_TIPO","SE2",STR0032,,,.F.,)  //"Tipo"
		TRCell():New(oSection3,"E2_EMISSAO","SE2",STR0033,,,.F.,)  //"Dt Emiss"
		TRCell():New(oSection3,"E2_FORNECE","SE2",STR0034,,,.F.,)  //"Cli/For"
		TRCell():New(oSection3,"E2_NOMFOR","SE2",STR0035,,24,.F.,)  //"Nome Cliente/Fornecedor"
		TRCell():New(oSection3,"E2_HIST","SE2",STR0036,,nTamHist,.F.,)  //"Historico"
		TRCell():New(oSection3,"VL_ORIGI",,STR0037,cPictVal,18,.F.,)  //"Valor Original"
		TRCell():New(oSection3,"VL_PAGAR",,STR0038,cPictVal,18,.F.,)  //"a Pagar"
		TRCell():New(oSection3,"VL_RECEB",,STR0039,cPictVal,20,.F.,)  //"a Receber"
		TRCell():New(oSection3,"VL_DISPO",,STR0040,cPictVal,20,.F.,)  //"Disponivel"
		TRCell():New(oSection3,"M2_MOEDA1",,STR0041,,,.F.,)  //"Taxa do Dia"
		TRCell():New(oSection3,"OBSERVACAO",,STR0042,cPictVal,20,.F.,)  //"Observacoes"
		oSection3:Cell("VL_ORIGI"):SetHeaderAlign("RIGHT")
		oSection3:Cell("VL_PAGAR"):SetHeaderAlign("RIGHT")
		oSection3:Cell("VL_RECEB"):SetHeaderAlign("RIGHT")
		oSection3:Cell("VL_DISPO"):SetHeaderAlign("RIGHT")
		oSection3:SetHeaderPage(.T.)
		oSection3:Setnofilter("SE2")
		oSection3:Setnofilter("SE1")
		
		oSection4 := TRSection():New(oReport,STR0044,{},)  //"PEDIDO"
		TRCell():New(oSection4,"PEDIDO",,,,72,.F.,)
		
		TRCell():New(oSection4,"E2_VENCREA",,STR0029,,,.F.,)  //"Data Ref"
		TRCell():New(oSection4,"E2_PREFIXO",,STR0030,,,.F.,) //"Prf"
		TRCell():New(oSection4,"TITULO",,STR0031,,nTamTit,.F.,) //"Numero-PC"
		TRCell():New(oSection4,"E2_TIPO",,STR0032,,,.F.,)  //"Tipo"
		TRCell():New(oSection4,"E2_EMISSAO",,STR0033,,,.F.,)  //"Dt Emiss"
		TRCell():New(oSection4,"E2_FORNECE",,STR0034,,,.F.,)  //"Cli/For"
		TRCell():New(oSection4,"E2_NOMFOR",,STR0035,,20,.F.,)  //"Nome Cliente/Fornecedor"
		TRCell():New(oSection4,"E2_HIST",,STR0036,,20,.F.,)  //"Historico"
		TRCell():New(oSection4,"VL_ORIGI",,STR0037,cPictVal,20,.F.,)  //"Valor Original"
		TRCell():New(oSection4,"VL_PAGAR",,STR0038,cPictVal,20,.F.,)  //"a Pagar"
		TRCell():New(oSection4,"VL_RECEB",,STR0039,cPictVal,20,.F.,)  //"a Receber"
		TRCell():New(oSection4,"VL_DISPO",,STR0040,cPictVal,20,.F.,)  //"Disponivel"
		TRCell():New(oSection4,"M2_MOEDA1",,STR0041,,,.F.,)  //"Taxa do Dia"
		TRCell():New(oSection4,"OBSERVACAO",,STR0042,cPictVal,nTamVal,.F.,)  //"Observacoes"

		oSection4:Cell("VL_ORIGI"):SetHeaderAlign("RIGHT")
		oSection4:Cell("VL_PAGAR"):SetHeaderAlign("RIGHT")
		oSection4:Cell("VL_RECEB"):SetHeaderAlign("RIGHT")
		oSection4:Cell("VL_DISPO"):SetHeaderAlign("RIGHT")
	
		oSection4:SetHeaderSection(.F.)
		
		
	Else
	    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Secao 03 - Visão Gerencial                                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oSection3 := TRSection():New(oReport, "Visão Gerencial",{""}) 
	
		TRCell():New(oSection3, "DATA-DESCRICAO", "cArqTmp" ,  ,  							 , 30 ,, { || CARQTMP->CODDESC })	//"CODIGO E DESCRIÇÃO"
		TRCell():New(oSection3, "RECEBIDOS"   	, "cArqTmp" ,  ,PesqPict("SE1","E1_VALOR") , 22 ,,	 { || CARQTMP->RECEBIDOS },,,"RIGHT")	//"RECEBIDOS"
		TRCell():New(oSection3, "PAGOS"   		, "cArqTmp" ,  ,PesqPict("SE1","E1_VALOR") , 22 ,,	 { || CARQTMP->PAGOS },,,"RIGHT")		//"PAGOS"
	   	TRCell():New(oSection3, "DISPONIVEL" 	, "cArqTmp" ,  , PesqPict("SE5","E5_VALOR") , 22 ,		,{ || CARQTMP->DISPON },,,"RIGHT",,,,,,.F.)	//"DISPONIVEL"
		TRCell():New(oSection3, " "			 	, "cArqTmp" ,  , 							 , 22 ,, { || CARQTMP->ORDEM },,,"RIGHT")	//"ORDEM"
	
		oSection3:SetNoFilter(" ")
		oSection3:SetHeaderPage(.F.)
	EndIf

/*
GESTAO - inicio */
/* Relacao das filiais selecionadas para compor o relatorio */
oSecFil := TRSection():New(oReport,"SECFIL",{"SE2"})
TRCell():New(oSecFil,"CODFIL",,STR0047,/*Picture*/,20,/*lPixel*/,/*{|| code-block de impressao }*/)		//"Código"
TRCell():New(oSecFil,"EMPRESA",,STR0048,/*Picture*/,60,/*lPixel*/,/*{|| code-block de impressao }*/)		//"Empresa"
TRCell():New(oSecFil,"UNIDNEG",,STR0049,/*Picture*/,60,/*lPixel*/,/*{|| code-block de impressao }*/)		//"Unidade de negócio"
TRCell():New(oSecFil,"NOMEFIL",,STR0050,/*Picture*/,60,/*lPixel*/,/*{|| code-block de impressao }*/)		//"Filial"
/* GESTAO - fim
*/
Return oReport

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrint³ Autor ³Daniel Batori          ³ Data ³10.07.06	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os  ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ReportPrint(oReport)
Local oSection1  := oReport:Section(1)
Local oSection2  := oReport:Section(2)
Local oSection3  := oReport:Section(3)
Local oSection4  := oReport:Section(4)
Local aDados1[5]
Local aDados2[2]
Local aDados3[15]
Local cArqTmp	 := ""            	// Arquivo temporario das movimentacoes

LOCAL cbCont,CbTxt
LOCAL nDias
LOCAL nValor
LOCAL w
LOCAL nTotSaidas
LOCAL dDataVenc
LOCAL lAchou	:= .F.
LOCAL dDataAte
LOCAL dDataImp
LOCAL limite			:= 220
LOCAL lContinua		:= .T.
LOCAL lFirst			:= .T.
LOCAL nDispon			:= 0
LOCAL nEl				:= 0
LOCAL aContas			:= {}
LOCAL nDiasInt			:= 0
LOCAL nJurDiario		:= 0
LOCAL nValJuros		:= 0
LOCAL nValGanho		:= 0
LOCAL aValAplic      := 0
LOCAL nTotTitR			:= 0
LOCAL nTotTitP			:= 0
LOCAL nTotGTitR		:= 0
LOCAL nTotGTitP		:= 0
LOCAL nRecHoje			:= 0
LOCAL nPagHoje			:= 0
Local nChqPend			:= 0
LOCAL nTotAplic		:= 0
LOCAL nTotResg			:= 0
LOCAL nTotEntradas	:= 0
LOCAL aAplic			:= {}
LOCAL aResgate			:= {}
LOCAL aBancosA			:= {}
LOCAL aBancosR			:= {}
LOCAL nSalDup			:= 0
LOCAL cArqSA6			:= " "
LOCAL cArqSE1			:= " "
LOCAL cArqSE2			:= " "
LOCAL cArqSE5			:= " "
LOCAL cArqSEG			:= " "
LOCAL cArqSEH			:= " "
LOCAL cCondSE1			:= " "
LOCAL cCondSE2			:= " "
LOCAL cCondSE5			:= " "
LOCAL nIndexSE3
LOCAL nIndexSE1
LOCAL nIndexSE2
LOCAL nIndexSE5
LOCAL nIndexSEG
LOCAL nIndexSEH
LOCAL nIndexFJA
LOCAL nApagVenc		:= 0 
LOCAL nArecVenc		:= 0 
LOCAL nComissoes	:= 0
LOCAL cArqSE3		:= ""
Local dDtSE8        := Ctod("")
Local lSldSE8		:= .F.
Local nIndSE8		:= 1
Local cArqSE8       := ""
Local cArqFJA       := ""
Local nRegSa6       := 0
Local nRecSE8       := 0
Local nDecs			:= GetMv("MV_CENT"+(IIF(mv_par02 > 1 , STR(mv_par02,1),""))) 
Local nMoedaBco		:=	1
Local nMoeda        := mv_par02
Local cAplCotas   	:= GetMv("MV_APLCAL4")
Local nAscan
Local lDataInf := .F.
Local lAchouUm := .F.
Local nAbatim
Local nVlrImp	:= 0
Local dOldData	:= dDatabase
Local nLimCred := 0
Local j 
Local i         := 0 
Local lLibCheq := GetMv("MV_LIBCHEQ")=="N" // Para controlar os cheques pendentes de liberacao.
Local lMvBr10925 := IIf(cPaisLoc == "BRA", GetMv("MV_BR10925")== "1", .F.) 
Local lChqLiber := .T.
Local lTxMoeda	:= .T.
Local cTitulo := OemToAnsi(STR0004)  // "Fluxo de Caixa Analitico"
Local nRegs
Local cIpProj := GetMv("MV_IPPRJAP")
Local dDataTrab
Local dDataVcOri     
Local nX             
Local aRecSE1	:={}          
Local nPos := 0
Local nAcumRc 	:= 0
Local nTotFutR := 0
Local aStru 	:= SE1->(DbStruct())
Local lImpFut  := .F.
Local lBxFut	:= .F.
Local lImpDev	:= .F.
Local lMovBco  := .F.  
Local lSldZera := IIF(mv_par18==1,.F.,.T.)
Local dVencRea		:= CtoD("")
///Local dDataVcOri	:= CtoD("")
Local nDiasRet		:= 0 
///Local nX			:= 0

Local cFilSA6   := xFilial("SA6")
Local cFilSE5   := xFilial("SE5")
Local cFilSE2   := xFilial("SE2")
Local cFilSE1   := xFilial("SE1")
Local cFilSEG   := xFilial("SEG")
Local cFilFJA   := xFilial("FJA")
Local cFilSEH   := xFilial("SEH")
Local cFilSEF	:= xFilial("SEF")

Local nValMoeda :=	0   
Local cNumMoeda := "M2_MOEDA"

Local lSolFund	:= MV_PAR21 == 1 .and. cPaisLoc == "ARG"
Local nTamEmp := Len(FwCodEmp())
/*
GESTAO - inicio */
Local nRegSM0		:= 0
Local nLenSelFil	:= 0
Local nLenFil		:= 0
Local cFilTmp		:= ""
Local aTmpFil		:= {}
Local cTmpFil		:= {}
Local aSM0			:= {}
Local aSelFil		:= {}
Local nTamUnNeg		:= 0
Local nTamTit		:= 0
Local cFiLSel		:= ""
Local cTitRel		:= ""
Local oSecFil		:= oReport:Section("SECFIL")
/* GESTAO - fim 
*/

//SITCOB
Local cListDesc 	:= FN022LSTCB(2)	//Obtem a lista de situacos de cobrancas Descontadas
Local cListBco	:= FN022LSTCB(3)	//Obtem a lista de situacos de cobranca que possuem portador

Private cErros 	:= ""
Private adCompras := {},adVendas:={}
Private aCompras	:= {},aVendas:={}


//Ponto de entrada para escolha entre bancos com ou sem movimento
If ExistBlock("FA140MVB")
	lMovBco := ExecBlock("FA140MVB")
Endif
/*
GESTAO - inicio */
 	If !IsBlind()
 		If lGestao .and. FindFunction("FwSelectGC")
			nRegSM0 := SM0->(Recno())
			If MV_PAR03 == 1	//filial
				aSelFil := FwSelectGC(.T.)
			Else
				aSelFil := {"0101"} //"0101" //FwSelectGC()
			Endif
		Else
			aSelFil := AdmGetFil(.F.,(MV_PAR03 == 1),"SE1")
		Endif
	Endif
	If Empty(aSelFil)
		aSelFil := {cFilAnt}
		MV_PAR03 := 1
	Endif
	
	If !IsBlind() .and. lGestao .and. FindFunction("FwSelectGC")
		SM0->(DbGoTo(nRegSM0))
	EndIf	
	
	/* imprime a lista de filiais selecionadas para o relatorio */
	If Len(aSelFil) > 1 // 1
		oSection3:SetHeaderSection(.F.)
		aSM0 := FWLoadSM0()
		nTamEmp := Len(FWSM0LayOut(,1))
		nTamUnNeg := Len(FWSM0LayOut(,2))
		cTitRel := oReport:Title()
		oReport:SetTitle(cTitRel + " (" + STR0051 + ")")		//"Filiais selecionadas para o relatorio"
		nTamTit := Len(oReport:Title())
		oSecFil:Init()  
		oSecFil:Cell("CODFIL"):SetBlock({||cFilSel})
		oSecFil:Cell("EMPRESA"):SetBlock({||aSM0[nLinha,SM0_DESCEMP]})
		oSecFil:Cell("UNIDNEG"):SetBlock({||aSM0[nLinha,SM0_DESCUN]})
		oSecFil:Cell("NOMEFIL"):SetBlock({||aSM0[nLinha,SM0_NOMRED]})
		For nX := 1 To Len(aSelFil)
			nLinha := Ascan(aSM0,{|sm0|,sm0[SM0_CODFIL] == aSelFil[nX]})
			If nLinha > 0
				cFilSel := Substr(aSM0[nLinha,SM0_CODFIL],1,nTamEmp)
				cFilSel += " "
				cFilSel += Substr(aSM0[nLinha,SM0_CODFIL],nTamEmp + 1,nTamUnNeg)
				cFilSel += " "
				cFilSel += Substr(aSM0[nLinha,SM0_CODFIL],nTamEmp + nTamUnNeg + 1)
				oSecFil:PrintLine()
			Endif
		Next
		oReport:SetTitle(cTitRel)
		oSecFil:Finish()
		oSection3:SetHeaderSection(.T.)
		oReport:EndPage()
	Endif	
/* GESTAO - fim
*/

/* GESTAO - fim
*/
oSection1:Cell("DESCRIC"		):SetBlock( { || aDados1[DESCRICAO] })
oSection1:Cell("VL_ORIGI"		):SetBlock( { || aDados1[ORIG] })
oSection1:Cell("VL_PAGAR"		):SetBlock( { || aDados1[PAGAR] })
oSection1:Cell("VL_RECEB"		):SetBlock( { || aDados1[RECEB] })
oSection1:Cell("VL_DISPO"		):SetBlock( { || aDados1[DISPO] })

oSection2:Cell("DESCRIC"		):SetBlock( { || aDados2[DESCRICAO] })
oSection2:Cell("VL_DISPO"		):SetBlock( { || aDados2[DISPONIVEL] })
  	
	If (Empty(MV_PAR20))
		oSection3:Cell("TOTAL"			):SetBlock( { || If(lBxFut, aDados3[DESC_TOTAL],If(lImpDev, STR0018,aDados3[DESC_TOTAL])) })

		oSection3:Cell("E2_VENCREA"	):SetBlock( { || If(lBxFut, aDados3[DT_VENC]	,If(lImpDev,, E1VENC->E1_VENCREA)) })
		oSection3:Cell("E2_PREFIXO"	):SetBlock( { || If(lBxFut, aDados3[PREFIXO]	,If(lImpDev,, E1VENC->E1_PREFIXO)) })
		oSection3:Cell("TITULO"			):SetBlock( { || If(lBxFut, aDados3[TITUL]		,If(lImpDev,, E1VENC->E1_NUM+(IIF(!EMPTY(E1VENC->E1_PARCELA),"-",""))+E1VENC->E1_PARCELA)) })
		oSection3:Cell("E2_TIPO"		):SetBlock( { || If(lBxFut, aDados3[TIPO]		,If(lImpDev,, E1VENC->E1_TIPO)) })
		oSection3:Cell("E2_EMISSAO"	):SetBlock( { || If(lBxFut, aDados3[EMISSAO]	,If(lImpDev,, E1VENC->E1_EMISSAO)) })
		oSection3:Cell("E2_FORNECE"):SetBlock( { || If(lBxFut, aDados3[FORNEC]		,If(lImpDev,, E1VENC->E1_CLIENTE)) })
		oSection3:Cell("E2_NOMFOR"		):SetBlock( { || If(lBxFut, aDados3[NOM_FORNEC],If(lImpDev,, SubStr(E1VENC->E1_NOMCLI,1,25))) })
		oSection3:Cell("E2_HIST"		):SetBlock( { || If(lBxFut, aDados3[HISTORICO]	,If(lImpDev,, If(E1VENC->E1_SALDO == 0,STR0046,SubStr(E1VENC->E1_HIST,1,25)))) })	//"Tit.Baixado p/Rec. Futuro"
		oSection3:Cell("VL_ORIGI"		):SetBlock( { || If(lBxFut, aDados3[VL_ORIG],) })
	
		oSection3:Cell("VL_PAGAR"		):SetBlock( { || If(lBxFut, aDados3[VL_PAG],If(lImpDev,nApagVenc,aDados3[VL_PAG])) })
		oSection3:Cell("VL_RECEB"		):SetBlock( { || If(lBxFut, aDados3[VL_REC],If(lImpDev,nArecVenc,nSaldo)) })
		oSection3:Cell("VL_DISPO"		):SetBlock( { || If(lBxFut, aDados3[VL_DIS],nDispon) })
		oSection3:Cell("TOTAL"):Disable()
	
		oSection4:Cell("PEDIDO"			):SetBlock( { || If(lBxFut, aDados3[DESC_TOTAL]	,If(lImpDev, STR0018,aDados3[DESC_TOTAL])) })
	
	
		oSection4:Cell("E2_VENCREA"	):SetBlock( { || If(lBxFut, aDados3[DT_VENC]	,If(lImpDev,, E1VENC->E1_VENCREA)) })
		oSection4:Cell("E2_PREFIXO"	):SetBlock( { || If(lBxFut, aDados3[PREFIXO]	,If(lImpDev,, E1VENC->E1_PREFIXO)) })
		oSection4:Cell("TITULO"			):SetBlock( { || If(lBxFut, aDados3[TITUL]		,If(lImpDev,, E1VENC->E1_NUM+(IIF(!EMPTY(E1VENC->E1_PARCELA),"-",""))+E1VENC->E1_PARCELA)) })
		oSection4:Cell("E2_TIPO"		):SetBlock( { || If(lBxFut, aDados3[TIPO]		,If(lImpDev,, E1VENC->E1_TIPO)) })
		oSection4:Cell("E2_EMISSAO"	):SetBlock( { || If(lBxFut, aDados3[EMISSAO]	,If(lImpDev,, E1VENC->E1_EMISSAO)) })
		oSection4:Cell("E2_FORNECE"):SetBlock( { || If(lBxFut, aDados3[FORNEC]		,If(lImpDev,, E1VENC->E1_CLIENTE)) })
		oSection4:Cell("E2_NOMFOR"		):SetBlock( { || If(lBxFut, aDados3[NOM_FORNEC],If(lImpDev,, SubStr(E1VENC->E1_NOMCLI,1,25))) })
		oSection4:Cell("E2_HIST"		):SetBlock( { || If(lBxFut, aDados3[HISTORICO]	,If(lImpDev,, If(E1VENC->E1_SALDO == 0,STR0046,SubStr(E1VENC->E1_HIST,1,25)))) })	//"Tit.Baixado p/Rec. Futuro"
	
		oSection4:Cell("VL_ORIGI"		):SetBlock( { || "" })
		oSection4:Cell("VL_ORIGI"		):Hide()
		oSection4:Cell("VL_PAGAR"		):SetBlock( { || If(lBxFut, aDados3[VL_PAG],If(lImpDev,nApagVenc,aDados3[VL_PAG])) })
		oSection4:Cell("VL_RECEB"		):SetBlock( { || If(lBxFut, aDados3[VL_REC],If(lImpDev,nArecVenc,nSaldo)) })
		oSection4:Cell("VL_DISPO"		):SetBlock( { || If(lBxFut, aDados3[VL_DIS],nDispon) })
			
		If mv_par02 == 1
			oSection4:Cell("M2_MOEDA1"):Disable()
		Else
			oSection4:Cell("M2_MOEDA1"):SetBlock({|| SM2->(&cNumMoeda) })
		EndIf
	
		cNumMoeda += CVALTOCHAR(mv_par02)
		If mv_par02 == 1
			oSection3:Cell("M2_MOEDA1"):Disable()
		Else
			oSection3:Cell("M2_MOEDA1"):SetBlock({|| SM2->(&cNumMoeda) })
		EndIf   
	EndIf

If mv_par03 == 2 .Or. !Empty(aSelFil)	// Imprime Por Filial ou Empresa		/* GESTAO */

	// Contas a receber
	dbSelectArea("SE1")
	cArqSE1 := SubStr(criatrab("",.f.),1,7)+"A"
	IndRegua("SE1",cArqSE1,"DTOS(E1_VENCREA)+E1_NOMCLI+E1_PREFIXO+E1_NUM+E1_PARCELA",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
	nIndexSE1 := RetIndex("SE1") + 1

	dbSetOrder( nIndexSE1 ) 
	
	// Contas a pagar
	dbSelectArea("SE2")
	cArqSE2 := SubStr(criatrab("",.f.),1,7)+"B"
	IndRegua("SE2",cArqSE2,"DTOS(E2_VENCREA)+E2_NOMFOR+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
	nIndexSE2 := RetIndex("SE2") + 1

	dbSetOrder( nIndexSE2 )
		
	// Movimentacao bancaria
	dbSelectArea("SE5")
	cArqSE5 := SubStr(criatrab("",.f.),1,7)+"C"
	IndRegua("SE5",cArqSE5,"DTOS(E5_DATA)+E5_BANCO+E5_AGENCIA+E5_CONTA",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
	nIndexSE5 := RetIndex("SE5") + 1

	//Contas Correntes
	If !Empty(xFilial("SA6"))
		dbSelectArea("SA6")
		cArqSA6 := CriaTrab(,.F.)
		IndRegua("SA6",cArqSA6,"A6_COD+A6_AGENCIA+A6_NUMCON",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
		nIndSA6 := RetIndex("SA6") + 1

		dbSetOrder(nIndSA6)
	Endif

	// Saldo Bancario
	dbSelectArea("SE8")
	cArqSE8 := CriaTrab(,.F.)
	IndRegua("SE8",cArqSE8,"E8_BANCO+E8_AGENCIA+E8_CONTA+DTOS(E8_DTSALAT)",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
	nIndSE8 := RetIndex("SE8") + 1

	dbSetOrder(nIndSE8)

	// Aplicacoes e emprestimos
	dbSelectArea("SEG")
	cArqSEG := SubStr(criatrab("",.f.),1,7)+"D"
	IndRegua("SEG",cArqSEG,"DTOS(EG_DATARES)+EG_BANCO+EG_AGENCIA+EG_CONTA",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
	SEG->(dbCommit())
	nIndexSEG := RetIndex("SEG") + 1

	// Aplicacoes e emprestimos
	dbCommit()
	dbSelectArea("SEH")
	cArqSEH := criatrab("",.f.)
	IndRegua("SEH",cArqSEH,"EH_STATUS+EH_APLEMP",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
	SEH->(dbCommit())
	nIndexSEH := RetIndex("SEH") + 1

	//Solicitacoes de Fundo  
	If lSolFund
		DbSelectArea("FJA")
		cArqFJA := CriaTrab(,.F.)
		IndRegua("FJA",cArqFJA,"DTOS(FJA_DATAPR)",,,OemToAnsi(STR0008))  //"Selecionando Registros..."
		nIndexFJA := RetIndex("FJA") + 1

    Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria indice condicional temporario para analise das comissoes ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
if mv_par07 == 1		// Analisa comissoes == Sim

	If Empty(cArqSE3)

		dbSelectArea("SE3")
		cArqSE3 := SubStr(criatrab("",.f.),1,7)+"E"
		cChave := "DTOS(E3_DATA)"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Condicao 1 - Somente filial 			  ³
		//³Condicao 2 - Todas filias (Empresa)	  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		if mv_par03 == 1 .And. Empty(aSelFil)
			// Nao Alterar o ctod(01/01/80)
			cCond := 'DTOS(E3_DATA)<="'+Dtos(ctod("01/01/80","ddmmyy"))+'".AND.E3_FILIAL=="'+xFilial("SE3")+'"'
		else
			cCond := 'DTOS(E3_DATA)<="'+Dtos(ctod("01/01/80","ddmmyy"))+'"'
		endif

		
		IndRegua("SE3",cArqSE3,cChave,,cCond,OemToAnsi(STR0008))  //"Selecionando Registros..."
		dbSelectArea("SE3")
		nIndexSE3		:= RetIndex("SE3") + 1
		dbSetOrder(nIndexSE3)
		SE3->(DbGoTop())
	Else
		dbSelectArea("SE3")
		nIndexSE3		:= RetIndex("SE3") + 1
		dbSetOrder( nIndexSE3 )
	Endif
Endif

cTitulo += " em "+GetMV("MV_MOEDA"+AllTrim(Str(mv_par02,2)))
dDataAte := dDataBase+mv_par01

oReport:SetTitle(cTitulo)

IF mv_par02 != 1
	cSuf := AllTrim(Str(mv_par02,2))
	cabec1 := OemToAnsi(STR0009) //"Data Ref Prf Numero    PC Tipo Dt Emiss Cli/For               Nome Cliente/Fornecedor     Historico                  Valor Original          a Receber            a Pagar          Disponivel         Taxa do Dia    Observacoes"
	dbSelectArea("SM2")
	dbSeek( dDataBase )
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Imprime disponibilidade Bancaria									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SA6")
/* GESTAO - inicio */
If !IsBlind()
	nLenSelFil := Len(aSelFil)
	If nLenSelFil == 0
		If ( MV_PAR03 == 1 )
			dbSeek( cFilSA6 )
		Else
			dbGotop()
		EndIf
	Else
		nPosFil := 0
		SA6->(DbGotop())
	Endif
Endif
/* GESTAO - fim
*/
cSuf := AllTrim(Str(mv_par02,2,0))

aFill(aDados1,nil)
aFill(aDados2,nil)
oSection1:Init()
oSection2:Init()

While ! SA6->(Eof()) .and. If(nLenSelFil == 0,If(MV_PAR03==1,SA6->A6_FILIAL == cFilSA6,.T.),.T.)
	/* GESTAO - inicio */
	If nLenSelFil > 0
		cFilTmp := AllTrim(SA6->A6_FILIAL)
		nLenFil := Len(cFilTmp)
		nPosFil := Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)})
		If nPosFil == 0
			SA6->(DbSkip())
			Loop
		Endif
	Else
		If mv_par03 == 2 
			If lGestao .and. Substring(SA6->A6_FILIAL, 1,nTamEmp) != Substring(cFilSA6, 1,nTamEmp )
		   		SA6->(dbSkip())
		   		Loop
			EndIf
		EndIf
	Endif
	/* GESTAO fim
	*/
	IF SA6->A6_FLUXCAI == "N"
		SA6->(dbSkip())
		Loop
	Endif
	nRegSa6 := RecNo()
	If lFirst
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se houve movimenta‡„o bancaria no dia da emissao do fluxo³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SE5")
		// 1-Verifica filial
		If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */			
			cCondSE5 := "!EOF() .and. E5_FILIAL == xFilial('SE5')"
		Else
			cCondSE5 := "!EOF()"
		Endif
		
		If mv_par03 == 1  // 1-Verifica Filial
			dbSetOrder(1)
			dbSeek( cFilSE5 + DTOS(dDataBase),.T. )
		Else
			dbSetOrder(nIndexSE5)
			dbSeek(DTOS(dDataBase),.T.)
		Endif
		
		While &cCondSE5
			/* 
			GESTAO - inicio */
			If nLenSelFil > 0
				cFilTmp := AllTrim(SE5->E5_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SE5->(DbSkip())
					Loop
				Endif
			Else
				If mv_par03 == 2
					If lGestao .and. Substring(SE5->E5_FILIAL,1,nTamEmp) != Substring(xFilial("SE5"),1, nTamEmp)
						dbSkip()
						Loop
					EndIf
				EndIf
			Endif
			/* GESTAO - fim 
			*/
			If mv_par14 == 1
			   If E5_DATA > dDataAte
			      Exit
			   EndIf			
			Else
			   If E5_DATA > dDataBase
			      Exit
			   EndIf						
			Endif   		
			
			IF mv_par03 == 1 .and. E5_FILIAL != cFilSE5
				Exit
			EndIF
			
			IF E5_SITUACA == "C" .or. E5_TIPODOC $ "JRþMTþDCþBAþCMþJ2þM2þD2þC2þV2þCXþCPüTL"
				dbSkip( )
				Loop
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe baixas estornadas           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If TemBxCanc(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)
				dbskip()
				loop
			EndIf
			nMoedaTit := BuscaMoeda()
        		
			If cPaisLoc	# "BRA".And.!Empty(SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA)
				SA6->(DbSetOrder(1))
				SA6->(DbSeek(xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
				nMoedaBco	:=	Max(SA6->A6_MOEDA,1)
			Else
				nMoedaBco	:=	1
			Endif

			If mv_par12 = 2
				If nMoedaBco <> nMoeda   
					SE5->(dbSkip())
					Loop
				EndIf
			EndIf
			
			IF E5_TIPODOC == "AP"  .And. E5_RECPAG = "P"     //Aplicacoes
				nTotAplic += xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				nEl := Ascan(aBancosA,E5_BANCO)
				IF nEl == 0
					AADD(aBancosA,E5_BANCO)
					AADD(aAplic,{E5_BANCO,E5_VALOR,E5_FILIAL})
				Else
					aAplic[nEl][2] += xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				EndIf
			ElseIf E5_TIPODOC == "AP" .And. E5_RECPAG = "R"      //Estorno de Aplicacoes
				nTotAplic -= xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				nEl := Ascan(aBancosA,E5_BANCO)
				IF nEl == 0
					AADD(aBancosA,E5_BANCO)
					AADD(aAplic,{E5_BANCO,E5_VALOR,E5_FILIAL})
				Else
					aAplic[nEl][2] -= xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				EndIf
			ElseIf E5_TIPODOC == "RF" .And. E5_RECPAG = "R"  //Resgates
				nTotResg += xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				nEl := Ascan(aBancosR,E5_BANCO)
				IF nEl == 0
					AADD(aBancosR,E5_BANCO)
					AADD(aResgate,{E5_BANCO,E5_VALOR,E5_FILIAL})
				Else
					aResgate[nEl][2]+=xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				EndIf
			ElseIf E5_TIPODOC == "RF" .And. E5_RECPAG = "P"  //Estorno de Resgates
				nTotResg -= xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				nEl := Ascan(aBancosR,E5_BANCO)
				IF nEl == 0
					AADD(aBancosR,E5_BANCO)
					AADD(aResgate,{E5_BANCO,E5_VALOR,E5_FILIAL})
				Else
					aResgate[nEl][2]-=xMoeda(E5_VALOR,nMoedaBco,nMoeda,E5_DATA,nDecs+1)
				EndIf	
			ElseIf E5_TIPODOC == "EP" .And. E5_RECPAG=="R" // Emprestimo
				nRecHoje += Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
									 If(SEH->EH_MOEDA > 1,E5_VLMOED2,xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1)))
			ElseIf E5_TIPODOC == "EP" .And. E5_RECPAG=="P" // Estorno de Emprestimo
				nRecHoje -= Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
									 If(SEH->EH_MOEDA > 1,E5_VLMOED2,xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1)))
			ElseIf E5_TIPODOC == "PE" .And. E5_RECPAG=="P" // Pagamento de emprestimo
				nPagHoje += Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
									 If(SEH->EH_MOEDA > 1,E5_VLMOED2,xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1)))
			ElseIf E5_TIPODOC == "PE" .And. E5_RECPAG=="R" // Estorno de pagamento de emprestimo
				nPagHoje -= Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
									 If(SEH->EH_MOEDA > 1,E5_VLMOED2,xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1)))
			ElseIf E5_TIPODOC == "RA" .And. E5_RECPAG=="R" .And. E5_DATA <> dDataBase  // Pagamento Antecipado
				nPagHoje -= Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
									 xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1))												 									 
			ElseIf E5_RECPAG == "R" .And. ! E5_TIPODOC $ "EP#PE#AP#RF"
				// Movimento a receber que nao seja emprestimo nem pagto de emprestimo
				nRecHoje += Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
									 If(SEH->EH_MOEDA > 1,E5_VLMOED2,xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1)))
			ElseIf E5_RECPAG == "P" .And. ! E5_TIPODOC $ "EP#PE#AP#RF"
				If lLibCheq
					// Pesquisa cheque pendentes de liberacao
					SEF->(DbSetOrder(3))									 
					If SEF->(MsSeek(xFilial("SEF")+SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_NUMCHEQ+E5_SEQ))) .And.;
						SEF->EF_LIBER $ " N"
						nChqPend += SEF->EF_VALOR
					Else
						// Movimento a pagar que nao seja emprestimo nem pagto de emprestimo
						nPagHoje += Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
										 xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1))	 
					Endif	
				Else
					// Movimento a pagar que nao seja emprestimo nem pagto de emprestimo
					nPagHoje += Iif(mv_par02 == 1,xMoeda(E5_VALOR,nMoedaBco,1,E5_DATA,nDecs+1),;
									 xMoeda(E5_VLMOED2,nMoedaTit,nMoeda,E5_DATA,nDecs+1))	 
				Endif	
			EndIf
			
			dbSkip()
			
		EndDo

		IF (nPagHoje+nRecHoje+nTotAplic+nTotResg+nChqPend) != 0
			aDados1[DESCRICAO] := STR0010  //"Movimentacao na data ate a hora da emissao"
			nTotEntradas := nTotResg + nRecHoje
			nTotSaidas	 := nTotAplic + nPagHoje + nChqPend
			oSection1:PrintLine()
			aFill(aDados1,nil)

			aDados1[DESCRICAO] := STR0011 + Replicate(".",109)   //"Aplicacoes "
			aDados1[PAGAR] := If(mv_par02 == 1,nTotAplic,nTotAplic / &('SM2->M2_MOEDA'+cSuf)) 
		   	oSection1:PrintLine()
			aFill(aDados1,nil)

			IF nTotAplic>0
				For w := 1 To Len(aBancosA)
					aDados1[DESCRICAO] := PadR(Space(4) + aAplic[w][1] , 9)
					dbSelectArea("SA6")
					If ( xFilial("SA6") == Space(nTamFilial) )
						dbSeek( cFilSA6 + aAplic[w][1] )
					Else
						dbSeek(aAplic[w,3]+aAplic[w][1])
					EndIf

					aDados1[DESCRICAO]	+= AllTrim(A6_NREDUZ)+Replicate(".",90-Len(AllTrim(A6_NREDUZ)))
					aDados1[ORIG] 		:=  IIF(mv_par02==1,aAplic[w][2],aAplic[w][2]/&('SM2->M2_MOEDA'+cSuf))	
					oSection1:PrintLine()
					aFill(aDados1,nil)
				Next w
			EndIF

			aDados1[DESCRICAO] := STR0012 + Replicate(".",111)  //  "Resgates "
			aDados1[RECEB] := IIF(mv_par02==1,nTotResg,nTotResg/&('SM2->M2_MOEDA'+cSuf))	 
			oSection1:PrintLine()
			aFill(aDados1,nil)
				
			IF nTotResg>0
				For w:=1 To Len(aBancosR)

					aDados1[DESCRICAO] := Space(4) + aResgate[w][1]
					dbSelectArea("SA6")
					If ( xFilial("SA6") == Space(nTamFilial) )
						dbSeek( cFilSA6 + aResgate[w][1] )
					Else
						dbSeek(aResgate[w,3]+aResgate[w][1])
					EndIf

					aDados1[DESCRICAO] := sPACE(9) + AllTrim(A6_NREDUZ) + Replicate(".",90-Len(AllTrim(A6_NREDUZ)))
					aDados1[ORIG] := IIF(mv_par02==1,aResgate[w][2],aResgate[w][2]/&('SM2->M2_MOEDA'+cSuf))  
					oSection1:PrintLine()
					aFill(aDados1,nil)
				Next w
			EndIF

			aDados1[DESCRICAO] := STR0013 + Replicate(".",106)  //"Outras Saidas "
			aDados1[PAGAR] := IIF(mv_par02==1,nPagHoje,nPagHoje/&('SM2->M2_MOEDA'+cSuf))
			oSection1:PrintLine()
			aFill(aDados1,nil)

			If lLibCheq
				aDados1[DESCRICAO] := STR0028+Replicate(".",90) // "Cheques pendentes de liberacao"
				aDados1[PAGAR] := If(mv_par02==1,nChqPend,nChqPend/&('SM2->M2_MOEDA'+cSuf))
				oSection1:PrintLine()
				aFill(aDados1,nil)
			Endif	

			aDados1[DESCRICAO] := STR0014 + Replicate(".",104)  //"Outras Entradas "
			aDados1[RECEB] := IIF(mv_par02==1,nRecHoje,If(SEH->EH_MOEDA > 1,nRecHoje,nRecHoje/&('SM2->M2_MOEDA'+cSuf)))  
			oSection1:PrintLine()
			aFill(aDados1,nil)
	
			oReport:SkipLine()
			aDados1[DESCRICAO] := STR0015 + Replicate(".",90)  //"Totais ate a hora da emissao "
			aDados1[PAGAR] := If(mv_par02==1,nTotSaidas,If(SEH->EH_MOEDA > 1,nTotSaidas,nTotSaidas/&('SM2->M2_MOEDA'+cSuf)))	
			aDados1[RECEB] := If(mv_par02==1,nTotEntradas,If(SEH->EH_MOEDA > 1,nTotEntradas,nTotEntradas/&('SM2->M2_MOEDA'+cSuf)))  
			oSection1:PrintLine()
			aFill(aDados1,nil)
				
			oReport:ThinLine()
			nPagHoje := 0
			nRecHoje := 0
			nTotAplic:= 0 
			nTotResg := 0
		EndIF
			
	EndIF

	dbSelectArea("SA6")
	dbGoTo(nRegSa6)
	dbSelectArea("SE8")
	dbSetOrder( nIndSE8 )
	If !(dbSeek(If((MV_PAR03==1 .And. nLenSelFil == 0),xFilial(),"")+SA6->A6_COD+SA6->A6_AGENCIA+SA6->A6_NUMCON+DtoS(dDataBase),.t.))	/* GESTAO */
		dbSkip( -1 )
		dDtSE8  := SE8->E8_DTSALAT
		lSldSE8 := .F. 
		nRecSE8 := SE8->(RECNO())
		/*
		GESTAO - inicio */ 
		While (  !Bof() .And. If((MV_PAR03==1 .And. nLenSelFil == 0),xFilial()==SE8->E8_FILIAL, .T. ) .And.;
						SA6->A6_COD+SA6->A6_AGENCIA+SA6->A6_NUMCON == ;
						SE8->E8_BANCO+SE8->E8_AGENCIA+SE8->E8_CONTA .And.;
						SE8->E8_DTSALAT == dDtSE8 )
			If nLenSelFil > 0
				cFilTmp := AllTrim(SE8->E8_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SE8->(DbSkip())
					Loop
				Endif
			Else
				If mv_par03 == 2 
					If lGestao .and. Substring(xFilial(),1,nTamEmp)!= Substring(SE8->E8_FILIAL,1,nTamEmp)
						SE8->(DbSkip())
						Loop
					EndIf
				EndIf
			Endif
		/* GESTAO - fim
		*/
			nRecSE8 := SE8->(RECNO())
			dbSkip(-1)	
			lSldSE8 := .T.
		EndDo
		
		If ( lSldSE8 )
			If SE8->(Bof())
				dbGoTo(nRecSE8)
			Else
				dbSkip()
			Endif
		EndIf
	EndIf
	
	nValor := 0
	/*
	GESTAO - inicio */
	While ( !Eof() .And. If((mv_par03==1 .And. nLenSelFil == 0),xFilial("SE8")==SE8->E8_FILIAL,.T. ) .And.;
			SA6->A6_COD+SA6->A6_AGENCIA+SA6->A6_NUMCON == ;
		  	SE8->E8_BANCO+SE8->E8_AGENCIA+SE8->E8_CONTA .And.;
		   SE8->E8_DTSALAT <= dDataBase)
		If nLenSelFil > 0
			cFilTmp := AllTrim(SE8->E8_FILIAL)
			nLenFil := Len(cFilTmp)
			If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
				SE8->(DbSkip())
				Loop
			Endif
		Else
			If mv_par03 == 2 
				If lGestao .and. Substring(xFilial("SE8"),1,nTamEmp )!= Substring(SE8->E8_FILIAL,1,nTamEmp)
					SE8->(DbSKip())
					Loop
				EndIf
			EndIf
		Endif
	/* GESTAO - fim
	*/
		If mv_par16 == 1			//Normal
			nValor += xMoeda(SE8->E8_SALATUA,If(cPaisLoc=="BRA",1,Max(SA6->A6_MOEDA,1)),mv_par02)
		ElseIf mv_par16 == 2   //Conciliado
			nValor += xMoeda(SE8->E8_SALRECO,If(cPaisLoc=="BRA",1,Max(SA6->A6_MOEDA,1)),mv_par02)
		ElseIf mv_par16 == 3   //Nao Conciliado
			nValor += xMoeda(SE8->E8_SALATUA-SE8->E8_SALRECO,If(cPaisLoc=="BRA",1,Max(SA6->A6_MOEDA,1)),mv_par02)
		EndIf
		dbSkip()
	Enddo
	
	If mv_par15 == 1 // Se considera limite de credito
		nLimCred := xMoeda(SA6->A6_LIMCRED,If(cPaisLoc=="BRA",1,Max(SA6->A6_MOEDA,1)),mv_par02)
	Endif	
	
	//valida a impressao de banco sem movimentacao, de acordo com o resultado do ponto de entrada FA140MVB	
	If !(lSldZera .And. nValor == 0) .And. (Iif(lMovBco,nValor+nLimCred != 0,.T.))	
		If lFirst
			aDados2[DESCRICAO] := STR0016  //"Disponibilidade imediata"
			oSection2:PrintLine()
			aFill(aDados2,nil)
			lFirst := .f.
		EndIf
	
		aDados2[DESCRICAO] := SA6->A6_NREDUZ + "  (" + SA6->A6_COD + ")" + ;
										Space(6)+"  AG: " + SA6->A6_AGENCIA + "  C/C: " +;
										SA6->A6_NUMCON
		aDados2[DISPONIVEL] := nValor
		oSection2:PrintLine()
		aFill(aDados2,nil)
	
		If mv_par15 == 1
			aDados2[DESCRICAO] := STR0027 + Replicate(".",134)  //"Limite de Credito: "
			aDados2[DISPONIVEL] := nLimCred
			oSection2:PrintLine()
			aFill(aDados2,nil)
		Endif	
				
	Endif
	nDispon += (nValor+nLimCred)
	
	
	dbSelectArea("SA6")
	// Se emitido por empresa e o SA6 for Exclusivo, posiciono na proxima conta diferenciada
	// ja que a rotina ja aglutinou os saldos de contas identicas (Bco/Age/Cta) que existam 
	// nas diferentes filiais
	dbGoTo(nRegSa6)
	SA6->(dbSkip())
	
	lFirst := .f.
		
EndDo

IF (nRegSa6 != 0)
	oReport:SkipLine()
	aDados2[DESCRICAO] := STR0017 + Replicate(".",135)  //"Total Disponivel "
	aDados2[DISPONIVEL] := nDispon
	oSection2:PrintLine()
	aFill(aDados2,nil)
	
EndIF

IF !lFirst
	oReport:SkipLine()
EndIf

oSection2:Finish()
oSection1:Finish()

If (Empty(MV_PAR20))
	aFill(aDados3,nil)
	oSection3:Init()
	oSection4:Init()

	If !oReport:lEmptyLineExcel
		oSection4:Cell("E2_VENCREA"	):Disable()
	Else
		oSection4:Cell("E2_VENCREA"	):Disable()
		oSection4:Cell("E2_PREFIXO"	):Disable()
		oSection4:Cell("TITULO"):Disable()
		oSection4:Cell("E2_TIPO"):Disable()
		oSection4:Cell("E2_EMISSAO"):Disable()
		oSection4:Cell("E2_FORNECE"):Disable()
		oSection4:Cell("E2_NOMFOR"):Disable()
/*		oSection4:Cell("E2_HIST"		):Disable()
		oSection4:Cell("M2_MOEDA1"		):Disable()	*/
	Endif

	lFirst := .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soma Titulos vencidos - a receber e a pagar						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If mv_par06 == 1	 // Considera titulos em atraso
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Soma Contas a pagar vencida pela data de Vencimento			  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
		IF TcSrvType() != "AS/400" 
			cOrdSE2 := SqlOrder(SE2->(Indexkey()))
			cRecPagAnt := FormatIn( MVPAGANT, "/" )
			aStru := SE2->(DbStruct())
			cQuery := ""
			aEval(aStru,{|x| cQuery += ","+AllTrim(x[1])})
			cQuery := "SELECT  " +SubStr(cQuery,2) + ", R_E_C_N_O_ RECNOSE2 "
			cQuery += " FROM " + RetSqlName("SE2")
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cQuery += "WHERE E2_FILIAL " + GetRngFil( aSelFil, "SE2", .T., @cTmpFil)
				Aadd(aTmpFil,cTmpFil)
			Else
				If mv_par03 == 1
					cQuery += " WHERE E2_FILIAL = '" + xFilial("SE2") + "'"
				Else
					If lGestao 
						If UPPER(AllTrim(TcGetDb())) $ "DB2|ORACLE"
							cQuery += " WHERE SUBSTR(E2_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE2"), 1, nTamEmp)+"'"
						Else
							cQuery += " WHERE SUBSTRING(E2_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE2"), 1, nTamEmp)+"'"
						Endif
					Else
						cQuery += " WHERE E2_FILIAL between ' ' AND 'zz'"
					EndIf
				Endif
			Endif
			/* GESTAO - fim
			*/
			cQuery += " AND E2_PREFIXO between '" + mv_par09 + "' AND '"+mv_par10 + "'"
			cQuery += " AND E2_MOEDA IN " + StrTran(FormatIn(AllTrim('0' + mv_par08),,1),"'","")
			cQuery += " AND E2_VENCREA <= '" + Dtos(dDataBase-1) +"'"
			If cPaisLoc=="BRA"
				cQuery += " AND E2_TIPO NOT IN " + cRecPagAnt
			EndIf
			If mv_par11 == 2
				cQuery += " AND E2_SALDO > 0 "
			Endif
			If mv_par12 == 2
				cQuery += " AND E2_MOEDA = " + Str(nMoeda,2)
			Endif
			cQuery += " AND E2_FLUXO <> 'N'"
			//Considerar ou nao titulos com emissao posterior a database
			If mv_par14 == 2
				cQuery += " AND E2_EMIS1 <= '"+Dtos(dDataBase) +"'"
			Endif
			cQuery += " AND D_E_L_E_T_ = ' '"
			cQuery += " ORDER BY " + cOrdSE2
			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"E2VENC",.T.,.T.)
			aEval(aStru, {|e| If(e[2]!= "C", TCSetField("E2VENC", e[1], e[2],e[3],e[4]),Nil)})
			oReport:SetMeter(RecCount())
			While ! E2VENC->(EOF())
				oReport:IncMeter()
				SE2->(MsGoto(E2VENC->RECNOSE2))
				If mv_par11 == 1
					nSaldo:=SaldoTit(E2VENC->E2_PREFIXO,E2VENC->E2_NUM,E2VENC->E2_PARCELA,E2VENC->E2_TIPO,E2VENC->E2_NATUREZ,"P",E2VENC->E2_FORNECE,mv_par02,E2VENC->E2_VENCREA,dDataBase,E2VENC->E2_LOJA,,If(cPaisLoc=="BRA",E2VENC->E2_TXMOEDA,0), mv_par17)
				Else
					// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
					lTxMoeda := SM2->(MsSeek(E2VENC->E2_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
					nSaldo:=xMoeda((E2VENC->E2_SALDO+E2VENC->E2_SDACRES-E2VENC->E2_SDDECRE),E2VENC->E2_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",E2VENC->E2_TXMOEDA,0))
				EndIf
				If cPaisLoc<>"BRA"
			    	If E2VENC->E2_TIPO $ MV_CRNEG+"/"+MV_CPNEG+"/"+MVIRABT+"/"+MVCSABT+"/"+MVCFABT+"/"+MVPIABT+"/"+MVABATIM+"/"+MVRECANT+"/"+MVPAGANT
						nApagVenc -= nSaldo
					Else
						nApagVenc += nSaldo
					Endif
	     		Else
					If E2VENC->E2_TIPO $ MVABATIM .or. E2VENC->E2_TIPO $ MV_CPNEG
						nApagVenc -= nSaldo
					Else
						nApagVenc += nSaldo
					Endif
				EndIf
				E2VENC->(dbSkip())
			Enddo
			E2VENC->(dbCloseArea())
			dbSelectArea("SE2")
		Else
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Soma Contas a pagar vencida pela data de Vencimento			  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dDataVenc := dDataBase-1
			dbSelectArea("SE2")
				If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */
				If lFirst
					RetIndex("SE2")
				EndIf
				dbSelectArea("SE2")
				SE2->(dbSetOrder(3))
				SE2->(dbSeek( cFilSE2 + DTOS(CTOD("01/01/60","ddmmyy")) ,.t.))
			Else
				dbGoTop()
			EndIf
			While ! SE2->(EOF()) .And. SE2->E2_VENCREA <= dDataVenc
					/*
					GESTAO - inicio */
					If nLenSelFil > 0
						cFilTmp := AllTrim(SE2->E2_FILIAL)
						nLenFil := Len(cFilTmp)
						If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
							SE2->(DbSkip())
							Loop
						Endif
					Else
				IF mv_par03 == 1 .and. SE2->E2_FILIAL != cFilSE2
					Exit
				EndIf
						If mv_par03 == 2
							If lGestao .and. Substring(E2_FILIAL,1,nTamEmp)!=Substring(cFilSE2,1,nTamEmp)
								SE2->(dbSkip())
								Loop
							EndIf
						EndIf
					Endif
					/* GESTAO - fim
					*/
				If SE2->E2_TIPO $ MVPAGANT .And. cPaisLoc=="BRA"
					SE2->(dbSkip())
					Loop
				EndIf
				If ! ( AllTrim(Str(SE2->E2_MOEDA,2)) $ mv_par08 )
					dbSkip()
					Loop
				EndIf
				If SE2->E2_SALDO == 0 .and. IIf(mv_par11==1,SE2->E2_BAIXA <= dDataBase,.T.)
					SE2->(dbSkip())
					Loop
				EndIf
				IF SE2->E2_PREFIXO < mv_par09 .or. SE2->E2_PREFIXO > mv_par10  //Do Prefixo ao Prefixo
					SE2->(dbSkip())
					Loop
				EndIF
				If SE2->E2_FLUXO == "N" .or. (SE2->E2_EMIS1 > dDataBase .and. mv_par14 == 2)
					dbSkip()
					Loop
				EndIf
		        If mv_par12 = 2
		           If SE2->E2_MOEDA != nMoeda   
		              SE2->(dbSkip())
		              Loop
		           EndIf
		        EndIf
				If mv_par11 == 1
					nSaldo:=SaldoTit(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_NATUREZ,"P",SE2->E2_FORNECE,mv_par02,SE2->E2_VENCREA,dDataBase,SE2->E2_LOJA,,If(cPaisLoc=="BRA",SE2->E2_TXMOEDA,0), mv_par17)
				Else
					// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
					lTxMoeda := SM2->(MsSeek(SE2->E2_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
					nSaldo:=xMoeda((SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE),SE2->E2_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",SE2->E2_TXMOEDA,0))
				EndIf
				If SE2->E2_TIPO $ MVABATIM+"/"+MV_CPNEG
					nApagVenc -= nSaldo
				Else
					nApagVenc += nSaldo
				EndIf
				SE2->(dbSkip())
			End
	
		Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soma Contas a receber vencida pela data de Vencimento		³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
		IF TcSrvType() != "AS/400" 
			cRecPagAnt := FormatIn( MVRECANT + "/" + MVIRF, "/" )
			cOrdSE1 := SqlOrder(SE1->(Indexkey()))
			aStru := SE1->(DbStruct())
			cQuery := ""
			aEval(aStru,{|x| cQuery += ","+AllTrim(x[1])})
			cQuery := "SELECT  " +SubStr(cQuery,2) + ", R_E_C_N_O_ RECNOSE1 "
			cQuery += " FROM " + RetSqlName("SE1")
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cQuery += "WHERE E1_FILIAL " + GetRngFil( aSelFil, "SE1", .T., @cTmpFil)
				Aadd(aTmpFil,cTmpFil)
			Else
				If mv_par03 == 1
					cQuery += " WHERE E1_FILIAL = '" + xFilial("SE1") + "'"
				Else
					If lGestao 
						If UPPER(AllTrim(TcGetDb())) $ "DB2|ORACLE"
							cQuery += " WHERE SUBSTR(E1_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE1"), 1, nTamEmp)+"'"
						Else
							cQuery += " WHERE SUBSTRING(E1_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE1"), 1, nTamEmp)+"'"
						EndIf
					Else
						cQuery += " WHERE E1_FILIAL between ' ' AND 'zz'"
					EndIf
				Endif
			Endif
			/* GESTAO - fim
			*/
			cQuery += " AND E1_PREFIXO between '" + mv_par09 + "' AND '"+mv_par10 + "'"
			cQuery += " AND E1_MOEDA IN " + StrTran(FormatIn(AllTrim('0' + mv_par08),,1),"'","")
			cQuery += " AND (E1_VENCREA <= '" + Dtos(dDataBase-1) +"')"
			//cQuery += " OR (E1_MOVIMEN <> ' ' AND E1_MOVIMEN <= '" + Dtos(dDataBase-1) + "'))"
			If  cPaisLoc=="BRA"
				cQuery += " AND E1_TIPO NOT IN " + cRecPagAnt
			EndIf
			cQuery += " AND E1_SITUACA NOT IN " + FormatIn(cListDesc,"|")			//sitcob
			If mv_par11 == 2
				cQuery += " AND E1_SALDO > 0 "
			Endif
			If mv_par12 == 2
				cQuery += " AND E1_MOEDA = " + Str(nMoeda,2)
			Endif
			cQuery += " AND E1_FLUXO <> 'N'"
			//Considerar ou nao titulos com emissao posterior a database
			If mv_par14 == 2
				cQuery += " AND E1_EMISSAO <= '"+Dtos(dDataBase) +"'"
			Endif
			If mv_par19 == 2  
				cQuery += " AND E1_FILIAL||E1_PREFIXO||E1_NUM||E1_PARCELA NOT IN ( "
				cQuery += " SELECT SE5.E5_FILIAL||SE5.E5_PREFIXO||SE5.E5_NUMERO||SE5.E5_PARCELA " 
				cQuery += " FROM " + RetSqlName("SE5")  + " SE5 "
				cQuery += " WHERE  SE5.E5_TIPODOC IN ('ES')AND SE5.D_E_L_E_T_='' )"
			Endif
			cQuery += " AND D_E_L_E_T_ = ' '"
			cQuery += " ORDER BY " + cOrdSE1
			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"E1VENC",.T.,.T.)
			aEval(aStru, {|e| If(e[2]!= "C", TCSetField("E1VENC", e[1], e[2],e[3],e[4]),Nil)})
			oReport:SetMeter(RecCount())
			While ! E1VENC->(EOF())
				oReport:IncMeter()
				SE1->(MsGoto(E1VENC->RECNOSE1))			
				If mv_par11 == 1
					nSaldo := SaldoTit(E1VENC->E1_PREFIXO,E1VENC->E1_NUM,E1VENC->E1_PARCELA,E1VENC->E1_TIPO,E1VENC->E1_NATUREZ,"R",E1VENC->E1_CLIENTE,mv_par02,E1VENC->E1_VENCREA,dDataBase,E1VENC->E1_LOJA,,If(cPaisLoc=="BRA",E1VENC->E1_TXMOEDA,0), mv_par17)
	 				IF cPaisLoc == "BRA" .And. lMvBr10925 .and. E1VENC->E1_TIPO $ "PIS|COF|CSL" .and. E1VENC->E1_BAIXA <= dDatabase // Quando o parametro MV_BR10925 estiver igual a 1 - Baixa
						nSaldo -= E1VENC->E1_VALOR
					Endif
					IF E1VENC->E1_TIPO $ MVABATIM .AND. E1VENC->E1_BAIXA <= dDatabase  //Quando se trata de impostos (abatimento) o saldotit não funciona corretamente por nao tratar tais movimentos de baixa.
						nSaldo -= E1VENC->E1_VALOR
					Endif
					IF E1VENC->(E1_PIS+E1_CSLL+E1_COFINS) > 0 .AND. mv_par13 == 1 // Reteve impostos
						nSaldo -= SomaAbat(E1VENC->E1_PREFIXO,E1VENC->E1_NUM,E1VENC->E1_PARCELA,"R",mv_par02,,E1VENC->E1_CLIENTE,E1VENC->E1_LOJA,E1VENC->E1_FILIAL,E1VENC->E1_EMISSAO)
					Endif
				Else
					// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
					lTxMoeda := SM2->(MsSeek(E1VENC->E1_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
					nSaldo   := xMoeda((E1VENC->E1_SALDO+E1VENC->E1_SDACRES-E1VENC->E1_SDDECRE),E1VENC->E1_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",E1VENC->E1_TXMOEDA,0))
					IF E1VENC->(E1_PIS+E1_CSLL+E1_COFINS) > 0 .AND. mv_par13 == 1 // Reteve impostos
						nSaldo -= SomaAbat(E1VENC->E1_PREFIXO,E1VENC->E1_NUM,E1VENC->E1_PARCELA,"R",mv_par02,,E1VENC->E1_CLIENTE,E1VENC->E1_LOJA,,E1VENC->E1_EMISSAO)
					Endif
				Endif
				// Se titulo do Template GEM
				If HasTemplate("LOT")  .And. !Empty(SE1->E1_NCONTR)
					If SE1->E1_VALOR == SE1->E1_SALDO .Or.;
						SE1->E1_VALOR == nSaldo //o titulo pode estar quitado(e1_saldo=0) mas valor em datas retroativas nao, portanto devera somar o valor do gem
						nSaldo += CMDtPrc(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_VENCREA,SE1->E1_VENCREA)[2]
					EndIf
				EndIf
				If E1VENC->E1_SALDO > 0
					If cPaisLoc<>"BRA"
						IF Alltrim(E1VENC->E1_TIPO) $  MV_CRNEG+"/"+MV_CPNEG+"/"+MVIRABT+"/"+MVCSABT+"/"+MVCFABT+"/"+MVPIABT+"/"+MVABATIM+"/"+MVRECANT+"/"+MVPAGANT
							nArecVenc -= nSaldo
						Else
							nArecVenc += nSaldo
						EndIf
					Else
						IF E1VENC->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
							nArecVenc -= nSaldo
						Else
							nArecVenc += nSaldo
						EndIf
					EndIf
				Else    
					If cPaisLoc<>"BRA"
						IF Alltrim(E1VENC->E1_TIPO) $  MV_CRNEG+"/"+MV_CPNEG+"/"+MVIRABT+"/"+MVCSABT+"/"+MVCFABT+"/"+MVPIABT+"/"+MVABATIM+"/"+MVRECANT+"/"+MVPAGANT
							nAcumRc -= nSaldo
						Else
							nAcumRc += nSaldo
						EndIf
					Else
						IF E1VENC->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
							nAcumRc -= nSaldo
						Else
							nAcumRc += nSaldo
						EndIf
					EndIf			
				Endif          
				//Quando o parametro mv_par19 = 2 e o titulo tiver estorno ele nao deve ser exibido no relatorio.
		      If mv_par19 == 1 .or. mv_par19 == 2 //.and. ListaES(xFilial("SE1")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA))
				  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				  //³ Impressao dos titulos baixados p/ recebimento futuro.		  ³
				  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				  If nSaldo <> 0  .And. E1VENC->E1_SALDO == 0
				    	If !lImpFut
					     oReport:ThinLine()
						  oReport:PrintText(STR0045) //"Títulos Baixados com Previsão de Movimentação Bancária Futura"
						  lImpFut := .T.
					   EndIf
				  	   If E1VENC->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
						  nDispon  -= nSaldo
					     nTotFutR -= nSaldo
					   Else	
						  nDispon  += nSaldo
						  nTotFutR += nSaldo
					  EndIf
				 oSection4:PrintLine()
				  EndIf
				Endif  
				E1VENC->(dbSkip())
			Enddo
	    	oReport:SkipLine()
			oReport:ThinLine()
			oSection4:Finish()
			E1VENC->(dbCloseArea())
			dbSelectArea("SE1")
		Else	
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Soma Contas a receber vencida pela data de Vencimento			  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SE1")
			If mv_par03 == 1
				If lFirst
					RetIndex("SE1")
				EndIf
				dbSelectArea("SE1")
				SE1->(dbSetOrder(7))
				SE1->(dbSeek( cFilSE1 + DTOS(CTOD("01/01/60","ddmmyy")),.T.))
			Else
				dbGoTop()
			EndIf
			While ! SE1->(EOF()) .And. (SE1->E1_VENCREA <= dDataBase-1) .Or. (!Empty(SE1->E1_MOVIMEN) .And. SE1->E1_MOVIMEN <= dDataBase-1)
				IF mv_par03 == 1 .and. cFilSE1 != SE1->E1_FILIAL
					Exit
				EndIf
					If mv_par03 == 2
						If lGestao .and. Substring(E1_FILIAL,1,nTamEmp)!=Substring(cFilSE1,1,nTamEmp)
		    				SE1->(dbSkip())
	    	    			Loop
						EndIf
					EndIf
				If SE1->E1_TIPO $ MVRECANT .And. cPaisLoc=="BRA"
					SE1->(dbSkip())
					Loop
				EndIf
				IF SE1->E1_PREFIXO < mv_par09 .or. SE1->E1_PREFIXO > mv_par10  //Do Prefixo ao Prefixo
					SE1->(dbSkip())
					Loop
				EndIF
				If ! ( AllTrim(Str(SE1->E1_MOEDA,2)) $ mv_par08 )
					dbSkip( )
					Loop
				EndIf
				If SE1->E1_FLUXO == "N" .or. (SE1->E1_EMISSAO > dDatabase .and. mv_par14 == 2)
					dbSkip()
					Loop
				EndIf
		        If mv_par12 = 2
		           If SE1->E1_MOEDA != nMoeda   
		              SE1->(dbSkip())
		              Loop
		           EndIf
		        EndIf
				If mv_par11 == 1
					nSaldo := SaldoTit(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_NATUREZ,"R",SE1->E1_CLIENTE,mv_par02,SE1->E1_VENCREA,dDataBase,SE1->E1_LOJA,,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0), mv_par17)
				Else
					// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
					lTxMoeda := SM2->(MsSeek(SE1->E1_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
					nSaldo   := xMoeda((SE1->E1_SALDO+SE1->E1_SDACRES-SE1->E1_SDDECRE),SE1->E1_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0))
				End
				// Se titulo do Template GEM
				If HasTemplate("LOT")  .And. !Empty(SE1->E1_NCONTR)
					If SE1->E1_VALOR == SE1->E1_SALDO .Or.;
						SE1->E1_VALOR == nSaldup //o titulo pode estar quitado(e1_saldo=0) mas valor em datas retroativas nao, portanto devera somar o valor do gem
						nSaldo += CMDtPrc(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_VENCREA,SE1->E1_VENCREA)[2]
					EndIf
				EndIf
				If SE1->E1_SALDO > 0
					IF SE1->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
						nArecVenc -= nSaldo
					Else
						nArecVenc += nSaldo
					EndIf
				Else    
					IF SE1->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
						nAcumRc -= nSaldo
					Else
						nAcumRc += nSaldo
					EndIf
				Endif          
				//Quando o parametro mv_par19 = 2 e o titulo tiver estorno ele nao deve ser exibido no relatorio.
		      If mv_par19 == 1 .or. (mv_par19 == 2 .and. ListaES(xFilial("SE1")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA))			
				  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				  //³ Impressao dos titulos baixados p/ recebimento futuro.		  ³
				  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				  If nSaldo <> 0  .And. SE1->E1_SALDO == 0
				    If !lImpFut
						oReport:ThinLine()
						oReport:PrintText(STR0045)	//"Títulos Baixados com Previsão de Movimentação Bancária Futura"
						lImpFut := .T.
					 EndIf
				  	 If SE1->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
						nDispon  -= nSaldo
					   nTotFutR -= nSaldo
					 Else	
						nDispon  += nSaldo
						nTotFutR += nSaldo
					 EndIf
					 oSection3:PrintLine()
				  EndIf
				Endif  
				SE1->(dbSkip())
			EndDo
	      oReport:SkipLine()
			oReport:ThinLine()
			oSection3:Finish()
	
		Endif
			
		If nArecVenc # 0 .or. nApagVenc # 0
			nDispon += nArecVenc
			nDispon -= nApagVenc
			oSection4:Init()
			lBxFut := .F.
			lImpDev := .T.
			oSection4:PrintLine()
			aFill(aDados3,nil)
			oReport:SkipLine()
			lBxFut := .T. 
			lImpDev := .F.
			oSection4:Finish()
		Endif
	Endif
	Else// Se for mostrar por visão Gerencial

		FRVisaoGer(nDispon, @cArqTmp, oReport, nMoeda,nDecs) 
	
		oSection3:Init()

		dbSelectArea("FJ3")
		dbSetOrder(1)
		dbGoTop()
	
		dbSelectArea("cArqTmp")
		dbSetOrder(1)
		dbGoTop()  
	
		//Impressao
	
		Do While CARQTMP->(!EOF())
	
			If FJ3->(dbSeek(xFilial("FJ3")+MV_PAR20+AllTrim(CARQTMP->ORDEM))) //Procura pela descricao na FJ3 para impressao em branco			
				
				//Se deve imprimir em branco
				If (FJ3->FJ3_IDENT $ "5")
					oSection3:Cell("DATA-DESCRICAO"):Show()
			   		oSection3:Cell("RECEBIDOS"     ):Hide()  
			   		oSection3:Cell("PAGOS"    	   ):Hide()
			   		oSection3:Cell("DISPONIVEL"    ):Hide() 
			   		oSection3:aCell[5]:Hide()
				Else
					oSection3:Cell("DATA-DESCRICAO"):Show()
			   		oSection3:Cell("RECEBIDOS"     ):Show()  
			   		oSection3:Cell("PAGOS"    	   ):Show()
			   		oSection3:Cell("DISPONIVEL"    ):Show()
			   		oSection3:aCell[5]:Hide()
				EndIf  
			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Inverte o saldo se assim a entidade estiver configurada ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FJ3->FJ3_FATSLD == "2" .And. !(FJ3->FJ3_IDENT $ "5" ) //Não for linha sem valor
					RecLock("cArqTmp",.F.)		
		    			CARQTMP->RECEBIDOS  := ((CARQTMP->RECEBIDOS) * -1)
		    			CARQTMP->PAGOS      := ((CARQTMP->PAGOS) * -1)
		    			CARQTMP->DISPON := ((CARQTMP->DISPON) * -1)
		   			MsUnLock()
		    		EndIf
			
		    EndIf  
		
			//Imprimir Traco
			If FJ3->(dbSeek(xFilial("FJ3")+MV_PAR20+AllTrim(CARQTMP->ORDEM)))  
			    If FJ3->FJ3_IDENT = '5' .And. Alltrim(FJ3->FJ3_DESCCG) == "-" 
		                //Desabilita a impressão da linha quando for imprimir o traco
					oReport:PrintText(Replicate("-",125))
					oSection3:Cell("DATA-DESCRICAO"):Disable()
					oSection3:Cell("RECEBIDOS"     ):Disable()
			   		oSection3:Cell("PAGOS"    	   ):Disable()
			   		oSection3:Cell("DISPONIVEL"    ):Disable()
			   		oSection3:aCell[5]:Disable() 
			  	Else
			  		oSection3:Cell("DATA-DESCRICAO"):Enable()
					oSection3:Cell("RECEBIDOS"     ):Enable()  
			   		oSection3:Cell("PAGOS"    	   ):Enable()
			   		oSection3:Cell("DISPONIVEL"    ):Enable()
			   		oSection3:aCell[5]:Enable()
				EndIf
			EndIf 
		
			If (mv_par06 == 1 .And. (CARQTMP->(Recno()) == 1))	 // Considera titulos em atraso
				oReport:PrintText("TÍTULOS VENCIDOS")
			EndIf 
		
			cData := SubStr(CARQTMP->CODDESC,1,10) 
		
			//Retira a data dos titulos vencidos
			If (mv_par06 == 1 .And. SubStr(CARQTMP->CODDESC,1,10) == "00/00/0000")
				RecLock("cArqTmp",.F.)
		   			CARQTMP->CODDESC := SubStr(CARQTMP->CODDESC,11,30) 
		  		MsUnLock()
		 	EndIf
		
			oSection3:PrintLine()     

		  	CARQTMP->(dbSkip())
	  	
		  	If (cData <> SubStr(CARQTMP->CODDESC,1,10))
		  		oReport:EndPage(.T.)
		  	EndIf    
	  	
		EndDo 
	
		oSection3:Finish()
		
		cArqTmp->(dbCloseArea()) 
		
		If _oFINR1401 <> Nil
			_oFINR1401:Delete()
			_oFINR1401 := Nil
		Endif 
	
	EndIf

	If (Empty(MV_PAR20))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soma as Comissoes. Os criterios de selecao dos registros foram³
	//³determinados no instante da criacao do indice condicional.	  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	if mv_par07 == 1
		DbSelectArea("SE3")
		dbGoTop()
		While !Eof() .and. SE3->E3_DATA <= dDataBase
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cFilTmp := AllTrim(SE3->E3_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SE3->(DbSkip())
					Loop
				Endif
			Endif
			/* GESTAO - fim
			*/
			nComissoes += xMoeda(SE3->E3_COMIS,1,mv_par02)
			dbSkip()
		End
		If nComissoes # 0
			nDispon -= nComissoes
			aDados3[DESC_TOTAL] := STR0019 //"Total de Comissoes A Pagar"
			aDados3[VL_PAG] := nComissoes
			aDados3[VL_DIS] := nDispon
			lBxFut := .T.
			lImpDev := .T.		
			oSection4:Init()
			oSection4:PrintLine()
			osection4:Finish()
			aFill(aDados3,nil)
			oReport:SkipLine()
		Endif
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Acessa titulos iniciais												  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nDias := (dDataAte-dDataBase)
	oReport:SetMeter(nDias)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica Pedidos de Compra e de Venda								  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If mv_par04 == 1
		/*
		GESTAO - inicio */
		If nLenSelFil > 0
			cFilTmp := cFilAnt
			For nX := 1 To nLenSelFil
				cFilAnt := aSelFil[nX]
				fc020Venda( mv_par08, /*cAliasPv*/, /*aTotais*/, /*lRegua*/, mv_par02, /*aPeriodo*/, aSelFil[nX], aSelFil[nX] )
			Next
			cFilAnt := cFilTmp
		Else 
			fc020Venda( mv_par08, /*cAliasPv*/, /*aTotais*/, /*lRegua*/, mv_par02, /*aPeriodo*/, /*cFilIni*/, /*cFilFin*/ )
		Endif
		/* GESTAO - fim
		*/
	Endif
	If mv_par05 == 1
		/*
		GESTAO - inicio */
		If nLenSelFil > 0
			cFilTmp := cFilAnt
			For nX := 1 To nLenSelFil
				cFilAnt := aSelFil[nX]
				fc020Compra(/*cAliasPc*/,/*aTotais*/,/*lRegua*/,mv_par02,/*aPeriodo*/,aSelFil[nX],aSelFil[nX], /*cPedidos*/)
			Next
			cFilAnt := cFilTmp
		Else
			fc020Compra(/*cAliasPc*/,/*aTotais*/,/*lRegua*/,mv_par02,/*aPeriodo*/,/*cFilIni*/,/*cFilFin*/, /*cPedidos*/)
		Endif
		/* GESTAO - fim
		*/
	Endif
	lDataInf := .F.
	lAchouUm := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soma Contas a Receber pela data de Vencimento					  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For j := 1 To nDias
		dDataVenc := dDataBase+j-1
		lAchou := .F.
		dbSelectArea("SE1")
		If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */
			dbSetOrder(7)
			dbSeek( cFilSE1 + DTOS(dDataVenc) )
		Else
			dbSetOrder( nIndexSE1 )
			dbSeek(DTOS(dDataVenc))
		Endif
		oReport:IncMeter()
		While !Eof() .And. SE1->E1_VENCREA == dDataVenc
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cFilTmp := AllTrim(SE1->E1_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SE1->(DbSkip())
					Loop
				Endif
			Else
				IF mv_par03 == 1 .and. SE1->E1_FILIAL != cFilSE1
					Exit
				EndIF
				IF mv_par03 == 2
					If lGestao .and. Substring(SE1->E1_FILIAL,1,nTamEmp )!= Substring(cFilSE1,1,nTamEmp )
						SE1->(dbSkip())
						Loop
					EndIf
				EndIF
			Endif
			/* GESTAO - fim
			*/
			If SE1->E1_TIPO $ MVRECANT
				dbSkip()
				Loop
			Endif
			IF SE1->E1_PREFIXO < mv_par09 .or. SE1->E1_PREFIXO > mv_par10  //Do Prefixo ao Prefixo
				SE1->(dbSkip())
				Loop
			EndIF
			If ! ( AllTrim(Str(SE1->E1_MOEDA,2)) $ mv_par08 )
				dbSkip( )
				Loop
			EndIf
			If SE1->E1_FLUXO == "N" .or. (SE1->E1_EMISSAO > dDatabase .and. mv_par14 == 2)
				dbSkip()
				Loop
			EndIf
			IF ( SE1->E1_SALDO = 0 .and. IIF( mv_par11 == 1, SE1->E1_BAIXA <= dDataBase, .T. )  ) .or. SE1->E1_SITUACA $ cListDesc //SITCOB
				dbSkip()
				Loop
			EndIF
			IF mv_par13 == 2 .And. SE1->E1_TIPO $ MVABATIM
				dbSkip()
				Loop
			EndIf 
	        If mv_par12 = 2
	           If SE1->E1_MOEDA != nMoeda   
	              SE1->(dbSkip())
	              Loop
	           EndIf
	        EndIf               
			AAdd(aRecSE1,{SE1->E1_VENCREA,SE1->(Recno()),SE1->E1_NOMCLI})
			SE1->(dbSkip()) 
		EndDo
	Next j
	//Ordena por data e cliente respectivamente.
	aRecSE1 := aSort(aRecSE1,,,{|x,y| DTOS(x[1])+x[3]<DTOS(y[1])+y[3]})
	oSection3:Init()
	oSection4:Init()
	For j := 1 To nDias
		dDataVenc := dDataBase+j-1                        
		nPos := 0
		If (nPos := aScan(aRecSe1,{|x| x[1] == dDataVenc},1)) > 0
			While (nPos<=Len(aRecSe1)) .and. (aRecSe1[nPos][1] == dDataVenc)
				SE1->(dbGoTo(aRecSe1[nPos][2])) 
				If mv_par11 == 1
					nSaldup := SaldoTit(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_NATUREZ,"R",SE1->E1_CLIENTE,mv_par02,SE1->E1_VENCREA,dDataBase,SE1->E1_LOJA,,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0), mv_par17)
				Else
					// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
					lTxMoeda := SM2->(MsSeek(SE1->E1_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
					nSaldup  := xMoeda((SE1->E1_SALDO+SE1->E1_SDACRES-SE1->E1_SDDECRE),SE1->E1_MOEDA,mv_par02,If(lTxMoeda,SE1->E1_VENCREA,dDataBase),nDecs+1,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0))
				End
				// Se titulo do Template GEM
				If HasTemplate("LOT")  .And. !Empty(SE1->E1_NCONTR)
					If SE1->E1_VALOR == SE1->E1_SALDO .Or.;
						SE1->E1_VALOR == nSaldup //o titulo pode estar quitado(e1_saldo=0) mas valor em datas retroativas nao, portanto devera somar o valor do gem
						nSaldup += CMDtPrc(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_VENCREA,SE1->E1_VENCREA)[2]
					EndIf
				EndIf
				dbSelectArea("SE1")
				If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */
					dbSetOrder(7)
				Endif
				IF SE1->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
					nDispon-=nSalDup
				Else
					nDispon+=nSalDup
				EndIf
				IF !lAchou
					dDataTrab := SE1->E1_VENCREA
				If SE1->E1_SITUACA $ cListBco 	// Situacoes que nao considera dias de retencao  //sitcob
					dDataVcOri := SE1->E1_VENCTO
					//Verifico se o proximo dia util apos o vencimento eh igual ao vencto real do titulo
					//Se for igual e o titulo estiver em cobranca, aplico os dias de retencao do banco
					//Se for diferente e o titulo estiver em cobranca, quer dizer que ja foram aplicados os dias de retencao
					//logo nao aplico novamente.
					If DtoS( DataValida( dDataVcOri ) ) == DtoS( dDataTrab )
						// Posiciona no banco para obter dias de retencao
						SA6->( dbSetOrder( 1 ) )
						SA6->( MsSeek( xFilial("SA6") + SE1->( E1_PORTADO + E1_AGEDEP + E1_CONTA ) ) )
						// Dias de retencao do banco em que o titulo esta
						nDiasRet := SA6->A6_RETENCA
						// Calcula proxima data valida (nao feriado) adicionados os dias de retencao
						For nX := 1 To nDiasRet                         
							dDataTrab := DataValida( dDataTrab + 1, .T. )
						Next
					EndIf
				EndIf
					aDados3[DT_VENC] := dDataTrab
				EndIF      
				aDados3[PREFIXO] := SE1->E1_PREFIXO
				aDados3[TITUL] := SE1->E1_NUM+(If(!EMPTY(SE1->E1_PARCELA),"-",""))+SE1->E1_PARCELA
				aDados3[TIPO] := SE1->E1_TIPO
				aDados3[EMISSAO] := SE1->E1_EMISSAO
				aDados3[FORNEC] := SE1->E1_CLIENTE
				aDados3[NOM_FORNEC] := SubStr(SE1->E1_NOMCLI,1,25)
				aDados3[HISTORICO] := SubStr(SE1->E1_HIST,1,25)
				nAbatim := 0 
				If mv_par13 == 2
					If mv_par14 == 1
						dOldData := dDataBase
						dDataBase := CTOD("31/12/40")
					Endif
					nAbatim := SomaAbat(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,"R",mv_par02,,SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_FILIAL)

					If mv_par14 == 1
						dDataBase := dOldData
					Endif

				Endif	
				nSalDup -= nAbatim
				nDispon -= nAbatim

				// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
				lTxMoeda := SM2->(MsSeek(dDataVenc)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
				aDados3[VL_ORIG] := xMoeda(SE1->E1_VALOR+SE1->E1_ACRESC-SE1->E1_DECRESC-nAbatim,SE1->E1_MOEDA,mv_par02,If(lTxMoeda,dDataVenc,dDataBase),,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0))
				aDados3[VL_ORIG] -= FaDescFin("SE1",,SE1->E1_VALOR,SE1->E1_MOEDA)
				aDados3[VL_REC] := nSalDup
				aDados3[VL_DIS] := nDispon
		
				If mv_par02 != 1 .and. !lAchou
					aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf) 
					dDataImp:=dDataVenc
				EndIf
				lBxFut := .T.
				lImpDev := .T.		
	    	  	oSection3:PrintLine()
				aFill(aDados3,nil)
		
				lAchou:=.t.
				dbSelectArea("SE1")
				IF SE1->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
					nTotTitR -= nSalDup
				Else
					nTotTitR += nSalDup
				End	
				nPos += 1
			EndDo
		EndIf
	
	If cIpProj =="S"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existe aplica‡„o a ser resgatada no dia				³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SEG")
		If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */
			dbSetOrder(2)
			dbSeek( cFilSEG + Dtos(dDataVenc) )
		Else
			dbSetOrder(nIndexSEG)
			dbSeek(Dtos(dDataVenc))
		Endif
	
		lAchou :=.f.
		While !Eof() .And. SEG->EG_DATARES == dDataVenc
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cFilTmp := AllTrim(SEG->EG_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SEG->(DbSkip())
					Loop
				Endif
			ElseIF mv_par03 == 1 .and. SEG->EG_FILIAL != cFilSEG
					Exit
			Elseif mv_par03 == 2
				If lGestao .and. Substring(xFilial(),1,nTamEmp)!= Substring (SEG->EG_FILIAL,1,nTamEmp)
					SEG->(DbSkip())
					Loop
				EndIf	
			Endif
			/* GESTAO - fim
			*/
			If SEG->EG_TIPO == "EMP"
				dbSkip( )
				Loop
				EndIf
			nDiasInt	:= EG_DATARES-EG_DATA	//Dias de Intervalo
			nJurDiario:= EG_TAXA/nDiasInt	  //Juros Diario
			nValJuros := EG_VALOR+((EG_VALOR*nJurDiario)/100)*nDiasInt
			nValGanho := nValJuros-EG_VALOR
			nValJuros -= nValGanho*EG_IMPOSTO/100 //Impostos
			IF mv_par02 == 1
				nDispon += nValJuros
			Else
				dbSelectArea("SM2")
				dbSeek( dDataVenc )
				nDispon += nValJuros/&('SM2->M2_MOEDA'+cSuf)
			EndIF
			dbSelectArea("SEG")

			IF !lAchou 
				aDados3[DESC_TOTAL] := DtoC(EG_DATARES)
			EndIF
	
			aDados3[DESC_TOTAL] := PadR(aDados3[DESC_TOTAL],09) + STR0021 + EG_TIPO + " - " + EG_BANCO  //"Projecao de Resgate de Aplicacao "
			aDados3[VL_ORIG] := If(mv_par02==1,EG_VALOR,EG_VALOR/&('SM2->M2_MOEDA'+cSuf))
			aDados3[VL_REC] := If(mv_par02==1,nValJuros,nValJuros/&('SM2->M2_MOEDA'+cSuf))
			aDados3[VL_DIS] := nDispon

			IF mv_par02!=1 .and. !lAchou
				dbSelectArea("SM2")
				dbSeek(dDataVenc)
				aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf) 
			EndIF
			
			lAchou:=.T.
			
			HabiCel(.F.,oReport)
			lBxFut := .T.
			lImpDev := .T.		
			oSection3:PrintLine()
			HabiCel(.T.,oReport)
			aFill(aDados3,nil)

			dbSelectArea("SEG")
			nTotTitR	+= IIF(mv_par02==1,nValJuros,nValJuros/&('SM2->M2_MOEDA'+cSuf))
			dbSkip()
		EndDo
	
		dbSelectArea("SEH")
		If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */ 
			dbSetOrder(2)
			dbSeek(xFilial("SEH")+"A")
		Else
			dbSetOrder(nIndexSEH)
			dbSeek("A")
		Endif

		lAchou := .f.
		While ( !Eof() .And.If((MV_PAR03==1 .And. nLenSelFil == 0),SEH->EH_FILIAL==xFilial("SEH"),.T.) .And.;
					SEH->EH_STATUS == "A" )
					
			If nLenSelFil > 0
				cFilTmp := AllTrim(SEH->EH_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil, {|afil| cFilTmp == Substring(afil,1,nLenFil)}) == 0
					SEH ->(dbSkip())
					Loop
				Endif
			ElseIf mv_par03 == 2
				If lGestao .and. Substring(EH_FILIAL,1,nTamEmp)!=Substring(xFilial("SEH"),1,nTamEmp)
					SEH->(dbSkip())
					Loop
				Endif			
			Endif	
					
			If ( SEH->EH_APLEMP != "EMP" )
				If ( Empty(SEH->EH_DATARES) .And. J==1 ) .Or.;
					( SEH->EH_DATARES == dDataVenc )
					nValJuros := SEH->EH_SALDO
					If !SEH->EH_TIPO $ cAplCotas
						aValAplic := Fa171Calc(	dDataVenc,,,,,,,, mv_par03 = 1)
						nValJuros += aValAplic[5]-aValAplic[2]-aValAplic[3]-aValAplic[4]
					Else
						aValAplic := {0,0,0,0,0,0}
						nAscan := Ascan(aAplicSeh, {|e|	e[1] == SEH->EH_CONTRAT .And.;
														 		   e[2] == SEH->EH_BCOCONT .And.;
																   e[3] == SEH->EH_AGECONT})
						If nAscan > 0																	   
							aValAplic :=	Fa171Calc(dDataVenc,SEH->EH_SLDCOTA,,,,SE9->E9_VLRCOTA,aAplicSeh[nAscan][6],(SEH->EH_SLDCOTA * aAplicSeh[nAscan][6]))
						Endif	
						nValJuros := xMoeda(aValAplic[1]-(aValAplic[2]+aValAplic[3]+aValAplic[4]),1,mv_par02)
					Endif
				Else
					nValJuros := 0
				EndIf
				If ( nValJuros != 0 )
					IF MV_PAR02 == 1
						nDispon += (nValJuros)
					Else
						dbSelectArea("SM2")
						dbSetOrder(1)
						dbSeek( dDataVenc )
						nDispon += (nValJuros)/&('SM2->M2_MOEDA'+cSuf)
					EndIf

					IF !lAchou
						aDados3[DESC_TOTAL] := DtoC(SEH->EH_DATARES)
					EndIF

					aDados3[DESC_TOTAL] := PadR(aDados3[DESC_TOTAL],09) + STR0021+SEH->EH_TIPO+" - "+SEH->EH_BANCO  //"Projecao de Resgate de Aplicacao "
					aDados3[VL_ORIG] := If(MV_PAR02==1,SEH->EH_SALDO,SEH->EH_SALDO/&('SM2->M2_MOEDA'+cSuf))
					aDados3[VL_REC] := If(MV_PAR02==1,nValJuros,nValJuros/&('SM2->M2_MOEDA'+cSuf))
					aDados3[VL_DIS] := nDispon

					IF ( MV_PAR02 != 1 .And. !lAchou )
						dbSelectArea("SM2")
						dbSetOrder(1)
						dbSeek(dDataVenc)
						aDados[TAXA] := &('SM2->M2_MOEDA'+cSuf)
					EndIf
				
					HabiCel(.F.,oReport)
					lBxFut := .T.
					lImpDev := .T.		
					oSection3:PrintLine()
					HabiCel(.T.,oReport)
					aFill(aDados3,nil)
				EndIf
				lAchou:=.T.
				nTotTitR	+= If(MV_PAR02==1,nValJuros,nValJuros/&('SM2->M2_MOEDA'+cSuf))

				If dDataVenc < SEH->EH_DATA
					dDataVenc := SEH->EH_DATA
				EndIf
			EndIf
		
			dbSelectArea("SEH")
			dbSkip()
		EndDo

	Endif

		dbSelectArea("SE2")
		If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */
			If lFirst
				RetIndex("SE2")
			End
			SE2->(dbSetOrder(3))
			SE2->(dbSeek( cFilSE2 + DTOS(dDataVenc) ,.t.) )
		Else
			dbSetOrder( nIndexSE2 )
			SE2->(dbSeek(DTOS(dDataVenc)),.t.)
		End
	
		lAchou := .f.
		While !Eof() .And. E2_VENCREA == dDataVenc
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cFilTmp := AllTrim(SE2->E2_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SE2->(DbSkip())
					Loop
				Endif
			Else
				IF mv_par03 == 1 .and. E2_FILIAL != cFilSE2
					Exit
				EndIF
				If mv_par03 == 2
					If lGestao .and. Substring(E2_FILIAL,1,nTamEmp)!=Substring(cFilSE2,1,nTamEmp)
						SE2->(dbSkip())
						Loop
					EndIf
				EndIf
			Endif
			/* GESTAO - fim
			*/
			If SE2->E2_SALDO == 0 .and. IIf(mv_par11==1,SE2->E2_BAIXA <= dDataBase,.t.)
				SE2->(dbSkip())
				Loop
			End
		
	        If mv_par12 = 2
	           If SE2->E2_MOEDA != nMoeda   
	              SE2->(dbSkip())
	              Loop
	           EndIf
	        EndIf
		
			If SE2->E2_BAIXA > dDataBase .And. mv_par11 == 1
				nSaldup:=SaldoTit(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_NATUREZ,"P",SE2->E2_FORNECE,mv_par02,SE2->E2_VENCREA,dDataBase,SE2->E2_LOJA,,If(cPaisLoc=="BRA",SE2->E2_TXMOEDA,0))
			Else
				// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
				lTxMoeda := SM2->(MsSeek(SE2->E2_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
				nSaldup:=xMoeda((SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE),SE2->E2_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",SE2->E2_TXMOEDA,0))
			End
		
			IF mv_par13 == 2 .And. SE2->E2_TIPO $ MVABATIM
				dbSkip()
				Loop
			End
			If E2_TIPO $ MVPAGANT
				dbSkip( )
				Loop
			Endif
		
			IF SE2->E2_PREFIXO < mv_par09 .or. SE2->E2_PREFIXO > mv_par10  //Do Prefixo ao Prefixo
				SE2->(dbSkip())
				Loop
			EndIF
		
			If ! ( AllTrim(Str(SE2->E2_MOEDA,2)) $ mv_par08 )
				dbSkip()
				Loop
			End
		
			If SE2->E2_FLUXO == "N" .or. (SE2->E2_EMIS1 > dDataBase .and. mv_par14 == 2)
				dbSkip()
				Loop
			End
		
			dbSelectArea("SE2")
			If mv_par03 == 1 .And. nLenSelFil == 0		/* GESTAO */
				dbSetOrder(3)
			Endif
		
			IF E2_TIPO $ MVABATIM+"/"+MV_CPNEG
				nDispon+=nSalDup
			Else
				nDispon-=nSalDup
			Endif
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se existe cheque sobre titulo e busca no  ³
			//³SEF para verificar se cheque esta liberado para    ³
			//³imprimir ou nao o titulo.                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE2->E2_IMPCHEQ == "S" .And. lLibCheq
				aAreaSE2 := GetArea()
				dbSelectArea("SEF")
				SEF->(dbSetOrder(3))      
				SEF->(MsSeek(xFilial("SEF")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)))
				While SEF->(!Eof()) .And. lChqLiber .And.; 
						SEF->(EF_FILIAL+EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO) ==;
						xFilial("SEF")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)
						
						
			If nLenSelFil > 0
				cFilTmp := AllTrim(SEF->EF_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil, {|afil| cFilTmp == Substring(afil,1,nLenFil)}) == 0
					SEF ->(dbSkip())
					Loop
				Endif
			ElseIf mv_par03 == 2
				If lGestao .and. Substring(EF_FILIAL,1,nTamEmp)!=Substring(xFilial("SEF"),1,nTamEmp)
					SEF->(dbSkip())
					Loop
				Endif			
			Endif				
						
					If SEF->EF_ORIGEM = "FINA390TIT" .And. SEF->EF_LIBER == "S"
						lChqLiber := .F.
					EndIf
					SEF->(dbSkip())
				EndDo
				RestArea(aAreaSE2)
				If !lChqLiber
					SE2->(dbSkip())
					Loop
				EndIf
			EndIf
  		
			IF !lAchou
				aDados3[DT_VENC] := SE2->E2_VENCREA
			EndIF

			aDados3[PREFIXO] := SE2->E2_PREFIXO
			aDados3[TITUL] := SE2->E2_NUM+(IIF(!EMPTY(SE2->E2_PARCELA),"-",""))+SE2->E2_PARCELA
			aDados3[TIPO] := SE2->E2_TIPO
			aDados3[EMISSAO] := SE2->E2_EMISSAO
			aDados3[FORNEC] := SE2->E2_FORNECE
			aDados3[NOM_FORNEC] := SubStr(SE2->E2_NOMFOR,1,25)
			aDados3[HISTORICO] := SubStr(SE2->E2_HIST,1,25)

			nAbatim := 0
			If mv_par13 == 2

				//Quando considerar Titulos com emissao futura, eh necessario
				//colocar-se a database para o futuro de forma que a Somaabat()
				//considere os titulos de abatimento
				If mv_par14 == 1
					dOldData := dDataBase
					dDataBase := CTOD("31/12/40")
				Endif

				nAbatim := SomaAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"P",mv_par02,,SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_FILIAL)

				If mv_par14 == 1
					dDataBase := dOldData
				Endif

			Endif	
			nSaldup -= nAbatim
			nDispon -= nAbatim      
			If cPaisLoc <> "BRA" .And. (E2_TIPO $ MV_CPNEG	 .Or. ( SE2->E2_TIPO $ MVPAGANT .And. (!Empty(SE2->E2_ORDPAGO) .Or. cPaisLoc =="ARG")))
				nVlrImp:= (SE2->E2_VALOR+SE2->E2_ACRESC-SE2->E2_DECRESC-nAbatim) * -1
			Else
				nVlrImp:= (SE2->E2_VALOR+SE2->E2_ACRESC-SE2->E2_DECRESC-nAbatim)
			EndIf
			// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
			lTxMoeda := SM2->(MsSeek(dDataVenc)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0

			aDados3[VL_ORIG] := xMoeda(nVlrImp,SE2->E2_MOEDA,mv_par02,If(lTxMoeda,dDataVenc,dDataBase),,If(cPaisLoc=="BRA",SE2->E2_TXMOEDA,0))
			IF cPaisLoc <> "BRA" .And. E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
				aDados3[VL_PAG] := nSalDup * -1
			Else
				aDados3[VL_PAG] := nSalDup
			Endif
			aDados3[VL_DIS] := nDispon

			IF mv_par02!=1 .and. !lAchou
				dbSelectArea("SM2")
				dbSeek(dDataVenc)
				aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf)
			EndIF

			lBxFut := .T.
			lImpDev := .T.		
			oSection3:PrintLine()
			aFill(aDados3,nil)

			lAchou:=.T.
			dbSelectArea("SE2")
			IF E2_TIPO $ MVABATIM+"/"+MV_CPNEG
				nTotTitP -= nSalDup
			Else
				nTotTitP += nSalDup
			End
			dbSkip()
		End
	
	If cIpProj =="S"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existe emprestimo a pagar no dia.					  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea( "SEG" )
		If mv_par03 == 1 .And. nLenSelFil == 0
			dbSetOrder(2)
			dbSeek( cFilSEG + Dtos(dDataVenc) )
		Else
			dbSetOrder( nIndexSEG ) 
			dbSeek(Dtos(dDataVenc))
		Endif
	
		lAchou := .f.

		While !Eof() .And. EG_DATARES == dDataVenc
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cFilTmp := AllTrim(SEG->EG_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SEG->(DbSkip())
					Loop
				Endif
			Else
				IF mv_par03 == 1 .and. EG_FILIAL != cFilSEG
					Exit
				EndIf
				If mv_par03 == 2
					If lGestao .and. Substring(EG_FILIAL,1,nTamEmp)!=Substring(cFilSEG,1,nTamEmp)
			  			SEG->(dbSkip())
		        		Loop
					EndIf
				EndIf
			Endif
			/* GESTAO - fim
			*/
			If SEG->EG_TIPO != "EMP"
				dbSkip( )
				Loop
			EndIf
		
			nDiasInt	:= EG_DATARES-EG_DATA	//Dias de Intervalo
			nJurDiario:= EG_TAXA/nDiasInt	  //Juros Diario
			nValJuros := EG_VALOR+((EG_VALOR*nJurDiario)/100)*nDiasInt
			nValGanho := nValJuros-EG_VALOR
			nValJuros -= nValGanho*EG_IMPOSTO/100 //Impostos
			IF mv_par02 == 1
				nDispon -= nValJuros
			Else
				dbSelectArea("SM2")
				dbSeek( dDataVenc )
				nDispon -= nValJuros/&('SM2->M2_MOEDA'+cSuf)
			EndIF
			dbSelectArea("SEG")

			IF !lAchou
				aDados3[DESC_TOTAL] := DtoC(EG_DATARES)
			EndIF

			aDados3[DESC_TOTAL] := PadR(aDados3[DESC_TOTAL],09) + STR0022 + EG_TIPO + " - " + EG_BANCO  //"Projecao de Pagamento de Emprestimo "
			aDados3[VL_ORIG] := If(mv_par02==1,EG_VALOR,EG_VALOR/&('SM2->M2_MOEDA'+cSuf))
			aDados3[VL_PAG] := If(mv_par02==1,nValJuros,nValJuros/&('SM2->M2_MOEDA'+cSuf))
			aDados3[VL_DIS] := nDispon

			IF mv_par02!=1 .and. !lAchou
				dbSelectArea("SM2")
				dbSeek(dDataVenc)
				aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf)
			EndIF
		
			lAchou:=.T.
		
			HabiCel(.F.,oReport)
			lBxFut := .T.
			lImpDev := .T.		
			oSection3:PrintLine()
			HabiCel(.T.,oReport)
			aFill(aDados3,nil)

			dbSelectArea("SEG")
			nTotTitP	+= IIF(mv_par02==1,nValJuros,nValJuros/ &('SM2->M2_MOEDA'+cSuf))
			dbSkip()
		End
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existe emprestimo a pagar no dia.					  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SEH")
		If ( MV_PAR03 == 1 ) .And. nLenSelFil == 0		/* GESTAO */
			dbSetOrder(2)
			dbSeek(xFilial("SEH")+"A")
		Else
			dbSetOrder( nIndexSEH ) 
			dbSeek("A")
		Endif

		lAchou := .f.
		While ( !Eof() .And. If(MV_PAR03==1,SEH->EH_FILIAL==xFilial("SEH"), .T. ) .And.;
					SEH->EH_STATUS=="A" )
			/*
			GESTAO - inicio */
			If nLenSelFil > 0
				cFilTmp := AllTrim(SEH->EH_FILIAL)
				nLenFil := Len(cFilTmp)
				If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
					SEH->(DbSkip())
					Loop
				Endif
			Else
				If mv_par03 == 2
					If lGestao .and. Substring(EH_FILIAL,1,nTamEmp)!=Substring(cFilSEH,1,nTamEmp)
		              	SEH->(dbSkip())
	    	          	Loop
					EndIf
				EndIf
			Endif
			/* GESTAO - fim
			*/
			If ( SEH->EH_APLEMP == "EMP" )
				If ( Empty(SEH->EH_DATARES) .And. J==1 ) .Or.;
					( SEH->EH_DATARES == dDataVenc )
					nValJuros := xMoeda(SEH->EH_SALDO,SEH->EH_MOEDA,1)
	            If mv_par02 == 1 //Controlo a operacao para moeda 1 e demais moedas (2~X)
						nValJuros := xMoeda(SEH->EH_SALDO,SEH->EH_MOEDA,1)   //Moeda 1
					Else
						nValJuros := SEH->EH_SALDO                            //Demais moedas (2~X)
					EndIf
					aValAplic := Fa171Calc(dDataVenc,,,,,,,, mv_par03 = 1)
					If Len(aValAplic) > 0	
						nValJuros += aValAplic[2,2]
					Endif	
				Else
					nValJuros := 0
				EndIf
				If ( nValJuros != 0 )
					If ( MV_PAR02 == 1 )
						nDispon -= (nValJuros)
					Else
						dbSelectArea("SM2")
						dbSetOrder(1)
						dbSeek( dDataVenc )
						nDispon -= (nValJuros)
					EndIf

					IF !lAchou
						//aDados3[DESC_TOTAL] := DtoC(SEH->EH_DATARES)
						aDados3[DESC_TOTAL] := If( !Empty(SEH->EH_DATARES) , DtoC(SEH->EH_DATARES),nil )
					EndIf

	            If(SEH->EH_MOEDA > 1)
	            	nValMoeda := &('SM2->M2_MOEDA' + CVALTOCHAR(SEH->EH_MOEDA))
	            Else
	            	nValMoeda := 1
	            EndIf
					aDados3[DESC_TOTAL] := PadR(aDados3[DESC_TOTAL],09) + STR0022 +SEH->EH_TIPO+" - "+SEH->EH_BANCO  //"Projecao de Pagamento de Emprestimo "
					aDados3[VL_ORIG] := If(MV_PAR02==1,SEH->EH_SALDO*nValMoeda,If(SEH->EH_MOEDA > 1,SEH->EH_SALDO,SEH->EH_SALDO/&('SM2->M2_MOEDA'+cSuf)))
					aDados3[VL_PAG] := If(MV_PAR02==1,nValJuros,If(SEH->EH_MOEDA > 1,nValJuros,nValJuros/&('SM2->M2_MOEDA'+cSuf)))
					aDados3[VL_DIS] := nDispon
		
					If ( MV_PAR02!=1 .And. !lAchou )
						dbSelectArea("SM2")
						dbSetOrder(1)
						dbSeek(dDataVenc)
						aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf)
					EndIf

					HabiCel(.F.,oReport)
					lBxFut := .T.
					lImpDev := .T.						
					oSection3:PrintLine()
					HabiCel(.T.,oReport)
					aFill(aDados3,nil)
				EndIf

				lAchou:=.T.
			
				nTotTitP	+= If(MV_PAR02==1,nValJuros,If(SEH->EH_MOEDA > 1,nValJuros,nValJuros/&('SM2->M2_MOEDA'+cSuf)))

				If dDataVenc < SEH->EH_DATA
					dDataVenc := SEH->EH_DATA
				EndIf
			EndIf
			dbSelectArea("SEH")
			dbSkip()
		EndDo

	Endif
		nEL:=0
		IF Len(aVendas)>0
			nEl:=Ascan(adVendas,dDataVenc)
			If nEl > 0 .And. !lAchouUm
				lAchouUm := .T.
			Endif	
			// Nao encontrou um pedido de venda na data atual e eh a primeira busca
			If !lAchouUm .And. !lDataInf 
				// Procura em uma data menor, apenas uma vez
				nEl:=Ascan(adVendas,{|e| e <= dDataVenc} )
				lDataInf := .T.
			Endif
		EndIF
		lAchou := .f.
		IF nEl != 0

			IF !lAchou
				aDados3[DESC_TOTAL] := DtoC(dDataVenc)
			EndIF
		
			nValor := aVendas[nEl,2]
			nEl++		
			Do While nEl <= Len(aVendas) .And. aVendas[nEl,1] == dDataVenc
				nValor += aVendas[nEl,2]
				nEl++
			EndDo
		
			nDispon += nValor
		
			aDados3[DESC_TOTAL] := PadR(aDados3[DESC_TOTAL],11) + STR0023  //"Pedidos de Vendas"
			aDados3[VL_REC] := nValor
			aDados3[VL_DIS] := nDispon

			IF mv_par02 != 1 .and. !lAchou
				dbSelectArea("SM2")
				Seek dDataVenc
				aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf)
			EndIF

			lBxFut := .T.
			lImpDev := .T.				
			oSection4:PrintLine()
			aFill(aDados3,nil)

			lAchou := .T.
			nTotTitR += nValor
		EndIF

		nEl:=0
	
		IF Len(aCompras)>0
			nEl := Ascan(adCompras,dDataVenc)
		EndIF
	
		lAchou := .f.
		IF nEl != 0
			IF !lAchou
				aDados3[DESC_TOTAL] := DtoC(dDataVenc)
			EndIF

			nValor:=0
			For i:=1 to Len(aCompras)
				If aCompras[i][1]==dDataVenc
					nValor+= aCompras[I][2]
				EndIf
			Next i
			nDispon -= nValor
      
			aDados3[DESC_TOTAL] := PadR(aDados3[DESC_TOTAL],11) + STR0024  //"Pedidos de Compras"
			aDados3[VL_PAG] := nValor
			aDados3[VL_DIS] := nDispon

			IF mv_par02 != 1 .and. ! lAchou
				dbSelectArea("SM2")
				Seek dDataVenc
				aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf)
			EndIF

			lBxFut := .T.
			lImpDev := .T.				
			oSection4:PrintLine()
			aFill(aDados3,nil)

			nTotTitP += nValor
			lAchou := .T.
		EndIF 
		
		//--------------------------------------------------------------
		// Solicitacoes de Fundo
		//--------------------------------------------------------------
		If lSolFund
			
			DbSelectArea("SA2")
			
			DbSelectArea("FJA")
			If MV_PAR03 == 1 .And. nLenSelFil == 0		//Imprime por - Filial		/* GESTAO */
				FJA->(DbSetOrder(5)) //FJA_FILIAL+FJA_DATAPR
				FJA->(DbSeek( cFilFJA + DToS(dDataVenc)) )
			Else //Imprime por - Empresa
				DbSetOrder(nIndexFJA)
				DbSeek(DToS(dDataVenc))
			Endif

			lAchou :=.F.

			While FJA->(!Eof()) .And. FJA_DATAPR == dDataVenc
				/*
				GESTAO - inicio */
				If nLenSelFil > 0
					cFilTmp := AllTrim(FJA->FJA_FILIAL)
					nLenFil := Len(cFilTmp)
					If Ascan(aSelFil,{|afil| cFilTmp == Substr(afil,1,nLenFil)}) == 0
						FJA->(DbSkip())
						Loop
					Endif
				Else
					If MV_PAR03 == 1 .And. FJA_FILIAL != cFilFJA
						Exit
					EndIf
					If mv_par03 == 2
						If lGestao .and. Substring(FJA_FILIAL,1,nTamEmp)!=Substring(cFilFJA,1,nTamEmp)
							FJA->(dbSkip())
	    	             	Loop
						EndIf
					EndIf
				Endif
				/* GESTAO - fim
				*/	
				// Solicitacoes de fundo Pendentes ou Aprovadas sem OP associada
				If ( FJA->FJA_ESTADO <> "1" .AND. FJA->FJA_ESTADO <> "2" )
					DbSkip()
					Loop
				EndIf

				nDispon -= XMoeda(FJA->FJA_VALOR,Val(FJA->FJA_MOEDA),MV_PAR02,dDataVenc)

				If !lAchou .And. MV_PAR02 != 1 //Moeda
					DbSelectArea("SM2")
					DbSeek(dDataVenc)
					aDados3[TAXA] := &('SM2->M2_MOEDA'+cSuf)
				EndIf

				If !lAchou 
					aDados3[DT_VENC] := FJA->FJA_DATAPR
				EndIf

				aDados3[PREFIXO]	:= ""
				aDados3[TITUL]		:= FJA->FJA_SOLFUN
				aDados3[EMISSAO]	:= FJA->FJA_DATA
				aDados3[FORNEC]		:= FJA->FJA_FORNEC
				aDados3[NOM_FORNEC]	:= SubStr(GetAdvFVal("SA2","A2_NOME",xFilial("SA2")+FJA->(FJA_FORNEC+FJA_LOJA),1,"",.T.),1,25)
				aDados3[HISTORICO]	:= SubStr(FJA->FJA_OBSERV,1,25)
				aDados3[VL_ORIG]	:= XMoeda(FJA->FJA_VALOR,Val(FJA->FJA_MOEDA),MV_PAR02,dDataVenc)
				aDados3[VL_PAG]		:= XMoeda(FJA->FJA_VALOR,Val(FJA->FJA_MOEDA),MV_PAR02,dDataVenc)
				aDados3[VL_DIS]		:= nDispon

				lBxFut := .T.
				ImpDev := .T.
				oSection3:PrintLine()

				aFill(aDados3,Nil)

				lAchou := .T.

				//----------------------------------------------
				// Adiciona o valor no total de titulos a pagar
				//----------------------------------------------
				nTotTitP += XMoeda(FJA->FJA_VALOR,Val(FJA->FJA_MOEDA),MV_PAR02,dDataVenc)

			FJA->(DbSkip())
			EndDo
       EndIf
		//------------------------
		// Imprime o total do dia
		//------------------------
		If nTotTitR !=0 .or. nTotTitP != 0
			oReport:SkipLine()
			aDados3[DESC_TOTAL] := STR0025 + DtoC(dDataVenc)  //"Total Do Dia ---> "
			aDados3[VL_PAG] := nTotTitP
			aDados3[VL_REC] := ntotTitR
			aDados3[VL_DIS] := nDispon
			lBxFut := .T.
			lImpDev := .T.
			If oReport:lEmptyLineExcel
				HabiCel(.F.,oReport)
				oSection3:PrintLine()
				HabiCel(.T.,oReport)
			Else
				oSection4:PrintLine()
			Endif
			aFill(aDados3,nil)
			oReport:SkipLine()
			nTotGTitR += nTotTitR
			nTotGTitP += nTotTitP
			nTotTitP := 0
			nTotTitR := 0   
		Endif
	
	Next j


	oReport:SkipLine()
	aDados3[DESC_TOTAL] := STR0026  //"Total Geral  --->"
	aDados3[VL_PAG] := nTotGTitP+nApagVenc
	aDados3[VL_REC] := nTotGTitR+nTotFutR+nArecVenc
	aDados3[VL_DIS] := nDispon

	If oReport:lEmptyLineExcel
		HabiCel(.F.,oReport)
		lBxFut := .T.
		lImpDev := .T.		
		oSection3:PrintLine()
		HabiCel(.T.,oReport)
	Else
		lBxFut := .T.
		lImpDev := .T.		
		oSection4:PrintLine()	
	Endif
	aFill(aDados3,nil)

	oSection3:Finish()
	oSection4:Finish()

EndIf


/*
GESTAO - inicio */
If !Empty(aTmpFil)
	For nX := 1 To Len(aTmpFil)
		CtbTmpErase(aTmpFil[nX])
	Next
Endif
/* GESTAO - fim
*/		
// Contas a receber
RetIndex("SE1")
dbSelectArea("SE1")
SE1->(dbSetOrder(1))
SE1->(dbClearFilter())

// Contas a pagar
RetIndex("SE2")
dbSelectArea("SE2")
SE2->(dbSetOrder(1))
SE2->(dbClearFilter())

// Comissao de vendas
RetIndex("SE3")
dbSelectArea("SE3")
SE3->(dbSetOrder(1))
SE3->(dbClearFilter())

// Movimentacao bancaria
RetIndex("SE5")
dbSelectArea("SE5")
SE5->(dbSetOrder(1))
SE5->(dbClearFilter())

// Contas Corrente
RetIndex("SA6")
dbSelectArea("SA6")
SA6->(dbSetOrder(1))
SA6->(dbClearFilter())

// Saldos bancarios
RetIndex("SE8")
dbSelectArea("SE8")
SE8->(dbSetOrder(1))
SE8->(dbClearFilter())

// Controle de aplicacoes
RetIndex("SEG")
dbSelectArea("SEG")
SEG->(dbSetOrder(1))
SEG->(dbClearFilter())

RetIndex("SEH")
dbSelectArea("SEH")
SEH->(dbSetOrder(1))
SEH->(dbClearFilter())

Ferase(cArqSEH+OrdBagExt())
Ferase(cArqSEG+OrdBagExt())
Ferase(cArqSE5+OrdBagExt())
Ferase(cArqSE2+OrdBagExt())
Ferase(cArqSE1+OrdBagExt())
Ferase(cArqSE3+OrdBagExt())
Ferase(cArqSE8+OrdBagExt())
Ferase(cArqSA6+OrdBagExt())

cNumMoeda := " "
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³HabiCel	³ Autor ³ Daniel Tadashi Batori ³ Data ³ 15/08/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³habilita ou desabilita celulas para imprimir totais			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ HabiCel()	 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lHabilit->.T. para habilitar e .F. para desabilitar		  ³±±
±±³			 ³ oReport ->objeto TReport que possui as celulas 				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
STATIC Function HabiCel(lHabilit,oReport)
Local oSection3 := oReport:Section(3)

If lHabilit
	
	oSection3:Cell("TOTAL"):Disable()
	oSection3:Cell("E2_VENCREA"):Enable()
	oSection3:Cell("E2_PREFIXO"):Enable()
	oSection3:Cell("TITULO"):Enable()
	oSection3:Cell("E2_TIPO"):Enable()
	oSection3:Cell("E2_EMISSAO"):Enable()
	oSection3:Cell("E2_FORNECE"):Enable()
	oSection3:Cell("E2_NOMFOR"):Enable()
	oSection3:Cell("E2_HIST"):Enable()
	
Else

	oSection3:Cell("TOTAL"):Enable()
	oSection3:Cell("E2_VENCREA"):Disable()
	oSection3:Cell("E2_PREFIXO"):Disable()
	oSection3:Cell("TITULO"):Disable()
	oSection3:Cell("E2_TIPO"):Disable()
	oSection3:Cell("E2_EMISSAO"):Disable()
   	oSection3:Cell("E2_FORNECE"):Disable()
	oSection3:Cell("E2_NOMFOR"):Disable()
	oSection3:Cell("E2_HIST"):Disable()
	
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINR770   ºAutor  ³Microsiga           º Data ³  08/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao que montara o arquivo temporario para impressao     º±±
±±º          ³ do relatorio com visao gerencial financeira                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FRVisaoGer(nDispon, cArqTmp, oReport, nMoeda,nDecs)
//Local oSection1 := oReport:Section(1) 
Local dDataAnt      
Local dDataAte
Local aCampos		:= {		{"CODDESC   ","C",30 ,0},;
								{"RECEBIDOS ","N",17,2},;
								{"PAGOS     ","N",17,2},;
								{"DISPON","N",17,2},;
								{"DATAAN","D",8,0},;
								{"ORDEM","C",17,0}}

Local nMoedaBco	:=	1
Local nI 			:= 0
Local cOrder      := ""
Local cFilUser          
Local cQueryVis
Local cQuerySE1
Local cSuperior 
Local cIdenti	 
Local nCont      
Local nTotRec	:= 0
Local nTotPago  := 0
Local nTotDisp	:= 0
Local cData         
Local nRec        
Local nRecno   
Local cRecPagAntSE1

Local cFilSA6   := xFilial("SA6")
Local cFilSE5   := xFilial("SE5")
Local cFilSE2   := xFilial("SE2")
Local cFilSE1   := xFilial("SE1")
Local cFilSEG   := xFilial("SEG")
Local cFilFJA   := xFilial("FJA")
Local nTamEmp := Len(FwCodEmp())

Local nTamEmp 	:= Len(FwCodEmp())
Local cListDesc 	:= FN022LSTCB(2)	//Obtem a lista de situacos de cobrancas Descontadas

Local cTable     := ""
Local nProcQry   := 0
Local cInsert    := ""
Local cColuna    := ""
Local aEstruct   := {}
Local nJ		 := 0
Local lMvBr10925 := IIf(cPaisLoc == "BRA", GetMv("MV_BR10925")== "1", .F.)
Local nTamFil    := TamSX3("FJ3_FILIAL")[1]
Local nTamCodPla := TamSX3("FJ3_CODPLA")[1]
Local nTamOrd    := TamSX3("FJ3_ORDEM")[1]
Local nTamContag := TamSX3("FJ3_CONTAG")[1]
Local nTamCtaSup := TamSX3("FJ3_CTASUP")[1]
Local nTamDscCg  := TamSX3("FJ3_DESCCG")[1] 
Local nTamDetHcg := TamSX3("FJ3_DETHCG")[1]
Local nTamNorm   := TamSX3("FJ3_NORMAL")[1]
Local nTamCol    := TamSX3("FJ3_COLUNA")[1]
Local nTamClas   := TamSX3("FJ3_CLASSE")[1]
Local nTamIdent  := TamSX3("FJ3_IDENT")[1]
Local nTamNome   := TamSX3("FJ3_NOME")[1]
Local nTamLin    := TamSX3("FJ3_LINHA")[1]
Local nTamSedIn  := TamSX3("FJ3_SEDINI")[1]
Local nTamSedFm  := TamSX3("FJ3_SEDFIM")[1]
Local nTamForm   := TamSX3("FJ3_FORMUL")[1]
Local nTamTvsIs  := TamSX3("FJ3_TOTVIS")[1]
Local nTamVisEnt := TamSX3("FJ3_VISENT")[1]
Local nTamSldEnt := TamSX3("FJ3_SLDENT")[1]
Local nTamFatSld := TamSX3("FJ3_FATSLD")[1]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria o arquivo tempor rio das movimentacoes.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If _oFINR1401 <> Nil
	_oFINR1401:Delete()
	_oFINR1401 := Nil
Endif

_oFINR1401 := FWTemporaryTable():New( "cArqTmp" )  
_oFINR1401:SetFields(aCampos) 	
_oFINR1401:AddIndex("1", {"DATAAN"}) 	
_oFINR1401:Create()	

dbSetOrder(1)

dDataAnt := dDataBase
dDataAte := dDataBase + MV_PAR01 //Data final      

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Query para buscar a visão gerencial escolhida no parametro³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
cQueryVis := " SELECT 0 as FJ3_REC, 0 AS FJ3_PAGO, 0 AS FJ3_DISP,FJ3.FJ3_FILIAL,FJ3.FJ3_CODPLA,FJ3.FJ3_ORDEM,FJ3.FJ3_CONTAG,FJ3.FJ3_CTASUP,"
cQueryVis += " FJ3.FJ3_DESCCG,FJ3.FJ3_DETHCG,FJ3.FJ3_NORMAL,FJ3.FJ3_COLUNA,FJ3.FJ3_CLASSE,FJ3.FJ3_IDENT,FJ3.FJ3_NOME,FJ3.FJ3_LINHA,"
cQueryVis += " FJ3.FJ3_SEDINI,FJ3.FJ3_SEDFIM,FJ3.FJ3_FORMUL,FJ3.FJ3_TOTVIS,FJ3.FJ3_VISENT,FJ3.FJ3_SLDENT,FJ3.FJ3_FATSLD"
cQueryVis += " FROM " + RetSqlName("FJ3") + " FJ3 "
cQueryVis += " WHERE FJ3_CODPLA = '" + MV_PAR20 + "' "
cQueryVis += " AND FJ3.D_E_L_E_T_ <> '*' "  

cQueryVis := ChangeQuery(cQueryVis)

//Define as colunas e suas propriedades para criar a tabela temporaria TRB4
AADD(aEstruct,{"FJ3_REC"   ,"N",17,2})
AADD(aEstruct,{"FJ3_PAGO"  ,"N",17,2})
AADD(aEstruct,{"FJ3_DISP"  ,"N",17,2})
AADD(aEstruct,{"FJ3_FILIAL","C",nTamFil,0})
AADD(aEstruct,{"FJ3_CODPLA","C",nTamCodPla,0})
AADD(aEstruct,{"FJ3_ORDEM" ,"C",nTamOrd,0})
AADD(aEstruct,{"FJ3_CONTAG","C",nTamContag,0})
AADD(aEstruct,{"FJ3_CTASUP","C",nTamCtaSup,0})
AADD(aEstruct,{"FJ3_DESCCG","C",nTamDscCg,0})
AADD(aEstruct,{"FJ3_DETHCG","C",nTamDetHcg,0})
AADD(aEstruct,{"FJ3_NORMAL","C",nTamNorm,0})
AADD(aEstruct,{"FJ3_COLUNA","N",nTamCol,0})
AADD(aEstruct,{"FJ3_CLASSE","C",nTamClas,0})
AADD(aEstruct,{"FJ3_IDENT" ,"C",nTamIdent,0})
AADD(aEstruct,{"FJ3_NOME"  ,"C",nTamNome,0})
AADD(aEstruct,{"FJ3_LINHA" ,"C",nTamLin,0})
AADD(aEstruct,{"FJ3_SEDINI","C",nTamSedIn,0})
AADD(aEstruct,{"FJ3_SEDFIM","C",nTamSedFm,0})
AADD(aEstruct,{"FJ3_FORMUL","C",nTamForm,0})
AADD(aEstruct,{"FJ3_TOTVIS","C",nTamTvsIs,0})
AADD(aEstruct,{"FJ3_VISENT","C",nTamVisEnt,0})
AADD(aEstruct,{"FJ3_SLDENT","C",nTamSldEnt,0})
AADD(aEstruct,{"FJ3_FATSLD","C",nTamFatSld,0})

//Armazena colunas para utilizar no insert de dados na tabela temporaria TRB4
for nJ := 1 to Len( aEstruct )
	cColuna += IIF(nJ>1,","+aEstruct[nJ][1],aEstruct[nJ][1])
next nJ

//----------------------------
//Criação da tabela temporaria
//----------------------------
If _oFINR1402 <> Nil
	_oFINR1402:Delete()
	_oFINR1402 := Nil
Endif

_oFINR1402 := FWTemporaryTable():New( "TRB4" )  
_oFINR1402:SetFields(aEstruct) 	

//Adiciono o índice da tabela temporária
_oFINR1402:AddIndex("1",{"FJ3_CODPLA","FJ3_ORDEM"})				

_oFINR1402:Create()	

//Obtenho o nome físico da tabela temporária no banco de dados
cTable := _oFINR1402:GetRealName()

cInsert := " INSERT "
If AllTrim(TcGetDb()) == "ORACLE"
	cInsert += " /*+ APPEND */ "
EndIf

If AllTrim(TcGetDb()) == "DB2"
	cQueryVis := STRTRAN( cQueryVis, "FOR READ ONLY", "" )
EndIf

cInsert += " INTO " + cTable + " ("+cColuna+" ) " + cQueryVis

//Executo o comando para alimentar a tabela temporária
Processa({|| nProcQry := TcSQLExec(cInsert)})

If nProcQry != 0
	UserException( TCSqlError() )
EndIf

dbSelectArea("TRB4")
TRB4->(dbGoTop())

If (mv_par06 == 1)	 // Considera titulos em atraso

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Query da SE2³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄ
	cOrdSE2 := SqlOrder(SE2->(Indexkey()))
	cRecPagAnt := FormatIn( MVPAGANT, "/" )
	aStru := SE2->(DbStruct())
	cQuery := ""
	aEval(aStru,{|x| cQuery += ","+AllTrim(x[1])})
	cQuery := "SELECT  " +SubStr(cQuery,2) + ", R_E_C_N_O_ RECNOSE2 "
	cQuery += " FROM " + RetSqlName("SE2")
	If mv_par03 == 1
		cQuery += " WHERE E2_FILIAL = '" + xFilial("SE2") + "'"
	Else
		If lGestao
			If UPPER(AllTrim(TcGetDb())) $ "DB2|ORACLE"
				cQuery += " WHERE SUBSTR(E2_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE2"), 1, nTamEmp)+"'"
			Else
				cQuery += " WHERE SUBSTRING(E2_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE2"), 1, nTamEmp)+"'"
			EndIf
		Else
			cQuery += " WHERE E2_FILIAL between ' ' AND 'zz'"
		EndIf
	Endif
	cQuery += " AND E2_PREFIXO between '" + mv_par09 + "' AND '"+mv_par10 + "'"
	cQuery += " AND E2_MOEDA IN " + StrTran(FormatIn(AllTrim('0' + mv_par08),,1),"'","")
	cQuery += " AND E2_VENCREA <= '" + Dtos(dDataBase-1) +"'"
	If cPaisLoc=="BRA"
		cQuery += " AND E2_TIPO NOT IN " + cRecPagAnt
	EndIf
	If mv_par11 == 2
		cQuery += " AND E2_SALDO > 0 "
	Endif
	If mv_par12 == 2
		cQuery += " AND E2_MOEDA = " + Str(nMoeda,2)
	Endif
	cQuery += " AND E2_FLUXO <> 'N'"
	//Considerar ou nao titulos com emissao posterior a database
	If mv_par14 == 2
		cQuery += " AND E2_EMISSAO <= '"+Dtos(dDataBase) +"'"
	Endif
	cQuery += " AND D_E_L_E_T_ = ' '"
	cQuery += " ORDER BY " + cOrdSE2  
	
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TRB2",.T.,.T.)
	aEval(aStru, {|e| If(e[2]!= "C", TCSetField("TRB2", e[1], e[2],e[3],e[4]),Nil)})
	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄø
	//³Query da SE1³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄ
	cRecPagAntSE1 := FormatIn( MVRECANT + "/" + MVIRF, "/" )
	cOrdSE1 := SqlOrder(SE1->(Indexkey()))
	aStruSE1 := SE1->(DbStruct())
	cQuerySE1 := ""
	aEval(aStruSE1,{|x| cQuerySE1 += ","+AllTrim(x[1])})
	cQuerySE1 := "SELECT  " +SubStr(cQuerySE1,2) + ", R_E_C_N_O_ RECNOSE1 "
	cQuerySE1 += " FROM " + RetSqlName("SE1")
	If mv_par03 == 1
		cQuerySE1 += " WHERE E1_FILIAL = '" + xFilial("SE1") + "'"
	Else
		If lGestao
			If UPPER(AllTrim(TcGetDb())) $ "DB2|ORACLE"
				cQuerySE1 += " WHERE SUBSTR(E1_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE1"), 1, nTamEmp)+"'"
			Else
				cQuerySE1 += " WHERE SUBSTRING(E1_FILIAL, 1,"+Str(nTamEmp)+" )= '"+ Substring(xFilial("SE1"), 1, nTamEmp)+"'"
			EndIf
		Else
			cQuerySE1 += " WHERE E1_FILIAL between ' ' AND 'zz'"
		EndIf
	Endif
	cQuerySE1 += " AND E1_PREFIXO between '" + mv_par09 + "' AND '"+mv_par10 + "'"
	cQuerySE1 += " AND E1_MOEDA IN " + StrTran(FormatIn(AllTrim('0' + mv_par08),,1),"'","")
	cQuerySE1 += " AND (E1_VENCREA <= '" + Dtos(dDataBase-1) +"')"
	If  cPaisLoc=="BRA"
		cQuerySE1 += " AND E1_TIPO NOT IN " + cRecPagAntSE1
	EndIf
	cQuerySE1 += " AND E1_SITUACA NOT IN " + FormatIn(cListDesc,"|")		//SITCOB
	If mv_par11 == 2
		cQuerySE1 += " AND E1_SALDO > 0 "
	Endif
	If mv_par12 == 2
		cQuerySE1 += " AND E1_MOEDA = " + Str(nMoeda,2)
	Endif
	cQuerySE1 += " AND E1_FLUXO <> 'N'"
	//Considerar ou nao titulos com emissao posterior a database
	If mv_par14 == 2
		cQuerySE1 += " AND E1_EMISSAO <= '"+Dtos(dDataBase) +"'"
	Endif
	cQuerySE1 += " AND D_E_L_E_T_ = ' '"
	cQuerySE1 += " ORDER BY " + cOrdSE1
	
	cQuerySE1 := ChangeQuery(cQuerySE1)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuerySE1),"TRB3",.T.,.T.)
	aEval(aStruSE1, {|e| If(e[2]!= "C", TCSetField("TRB3", e[1], e[2],e[3],e[4]),Nil)})

	
	dbSelectArea("TRB4")
	dbGoTop()
	        
   	dbSelectArea("TRB2")  
   //	COPY TO "TRB2.TXT" SDF   
	dbGoTop()
	
	dbSelectArea("TRB3")
  //	COPY TO "TRB3.TXT" SDF
	dbGoTop()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento de recebidos, pagos e DISPON de Titulos vencidos   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Do While (TRB4->(!EOF()))
	    
	    // Se for analitica -  busco por naturezas
		If (!Empty(TRB4->FJ3_SEDINI) .And. !Empty(TRB4->FJ3_SEDFIM))  
			
			Do While (TRB2->(!EOF()))
			
				nSaldo := 0
			
			    //Confere a natureza do registro SE5 E se a data eh a do dia processado
				If ((AllTrim(TRB2->E2_NATUREZ) >= AllTrim(TRB4->FJ3_SEDINI) .And. AllTrim(TRB2->E2_NATUREZ) <= AllTrim(TRB4->FJ3_SEDFIM)) /*.And. TRB2->E2_VENCREA == dDataAnt*/)
					
					//Descobrir qual o valor real do titulo
					If mv_par11 == 1
						nSaldo:=SaldoTit(TRB2->E2_PREFIXO,TRB2->E2_NUM,TRB2->E2_PARCELA,TRB2->E2_TIPO,TRB2->E2_NATUREZ,"P",TRB2->E2_FORNECE,mv_par02,TRB2->E2_VENCREA,dDataBase,TRB2->E2_LOJA,,If(cPaisLoc=="BRA",TRB2->E2_TXMOEDA,0), mv_par17)
					Else
						// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
						lTxMoeda := SM2->(MsSeek(TRB2->E2_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
						nSaldo:=xMoeda((TRB2->E2_SALDO+TRB2->E2_SDACRES-TRB2->E2_SDDECRE),TRB2->E2_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",TRB2->E2_TXMOEDA,0))
					EndIf
		             
					//Soma na propria linha da Entidade o valor correto do titulo
					If cPaisLoc<>"BRA"
				    	If TRB2->E2_TIPO $ MV_CRNEG+"/"+MV_CPNEG+"/"+MVIRABT+"/"+MVCSABT+"/"+MVCFABT+"/"+MVPIABT+"/"+MVABATIM+"/"+MVRECANT+"/"+MVPAGANT
							RecLock("TRB4",.F.)
					   	   		TRB4->FJ3_PAGO -= nSaldo
							TRB4->(MsUnLock())
						Else
							RecLock("TRB4",.F.)
					   	   		TRB4->FJ3_PAGO += nSaldo
							TRB4->(MsUnLock())
						Endif
		     		Else
		            
						If TRB2->E2_TIPO $ MVABATIM .or. TRB2->E2_TIPO $ MV_CPNEG
							RecLock("TRB4",.F.)
					   	   		TRB4->FJ3_PAGO -= nSaldo
							TRB4->(MsUnLock())
						Else
							RecLock("TRB4",.F.)
					   	   		TRB4->FJ3_PAGO += nSaldo
							TRB4->(MsUnLock())
						Endif
					EndIf
					
					cSuperior := TRB4->FJ3_CTASUP // Conta Superior
					cIdenti	  := TRB4->FJ3_IDENT // Somar ou Subtrair
					nCont     := TRB4->(Recno())
	
					//Procurar nas superiores e somar ou subtrair
					Do While (!Empty(cSuperior)) 
					                        
						//Somar ou Subtrair conforme campo FJ3_IDENTI
						If (cSuperior == TRB4->FJ3_CONTAG)
							If (cIdenti == '1')
							   	RecLock("TRB4",.F.)
								   	TRB4->FJ3_PAGO += nSaldo
							  	TRB4->(MsUnLock())
							Else
							   	RecLock("TRB4",.F.)
								  	TRB4->FJ3_PAGO -= nSaldo
							   	TRB4->(MsUnLock())
							EndIf
						EndIf 
						
						cSuperior := TRB4->FJ3_CTASUP
						TRB4->(dbSkip(-1))
					EndDo
					
					TRB4->(dbGoto(nCont))// Posiciona no ultimo registro
	
				EndIf
				
				TRB2->(dbSkip())
			EndDo 
			
			//Contas a receber
			Do While (TRB3->(!EOF()))
			
				nSaldo := 0
			
			    //Confere a natureza do registro SE5 E se a data eh a do dia processado
				If ((AllTrim(TRB3->E1_NATUREZ) >= AllTrim(TRB4->FJ3_SEDINI) .And. AllTrim(TRB3->E1_NATUREZ) <= AllTrim(TRB4->FJ3_SEDFIM)))
					
					If mv_par11 == 1
						nSaldo := SaldoTit(TRB3->E1_PREFIXO,TRB3->E1_NUM,TRB3->E1_PARCELA,TRB3->E1_TIPO,TRB3->E1_NATUREZ,"R",TRB3->E1_CLIENTE,mv_par02,TRB3->E1_VENCREA,dDataBase,TRB3->E1_LOJA,,If(cPaisLoc=="BRA",TRB3->E1_TXMOEDA,0), mv_par17)
		                
		 				IF cPaisLoc == "BRA" .And. lMvBr10925 .and. TRB3->E1_TIPO $ "PIS|COF|CSL" .and. TRB3->E1_BAIXA <= dDatabase // Quando o parametro MV_BR10925 estiver igual a 1 - Baixa
							nSaldo -= TRB3->E1_VALOR
						Endif
										
						IF TRB3->E1_TIPO $ MVABATIM .AND. TRB3->E1_BAIXA <= dDatabase  //Quando se trata de impostos (abatimento) o saldotit não funciona corretamente por nao tratar tais movimentos de baixa.
							nSaldo -= TRB3->E1_VALOR
						Endif
		
						IF TRB3->(E1_PIS+E1_CSLL+E1_COFINS) > 0 .AND. mv_par13 == 1 // Reteve impostos
							nSaldo -= SomaAbat(TRB3->E1_PREFIXO,TRB3->E1_NUM,TRB3->E1_PARCELA,"R",mv_par02,,TRB3->E1_CLIENTE,TRB3->E1_LOJA,TRB3->E1_FILIAL,TRB3->E1_EMISSAO)
						Endif
		
					Else
						// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
						lTxMoeda := SM2->(MsSeek(TRB3->E1_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
						nSaldo   := xMoeda((TRB3->E1_SALDO+TRB3->E1_SDACRES-TRB3->E1_SDDECRE),TRB3->E1_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",TRB3->E1_TXMOEDA,0))
		
						IF TRB3->(E1_PIS+E1_CSLL+E1_COFINS) > 0 .AND. mv_par13 == 1 // Reteve impostos
							nSaldo -= SomaAbat(TRB3->E1_PREFIXO,TRB3->E1_NUM,TRB3->E1_PARCELA,"R",mv_par02,,TRB3->E1_CLIENTE,TRB3->E1_LOJA,TRB3->E1_FILIAL,TRB3->E1_EMISSAO)
						Endif
					Endif
	
					// Se titulo do Template GEM
					If HasTemplate("LOT")  .And. !Empty(SE1->E1_NCONTR)
						If SE1->E1_VALOR == SE1->E1_SALDO .Or.;
							SE1->E1_VALOR == nSaldo //o titulo pode estar quitado(e1_saldo=0) mas valor em datas retroativas nao, portanto devera somar o valor do gem
							nSaldo += CMDtPrc(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_VENCREA,SE1->E1_VENCREA)[2]
						EndIf
					EndIf
		
					If TRB3->E1_SALDO > 0
						If cPaisLoc<>"BRA"
							IF Alltrim(TRB3->E1_TIPO) $  MV_CRNEG+"/"+MV_CPNEG+"/"+MVIRABT+"/"+MVCSABT+"/"+MVCFABT+"/"+MVPIABT+"/"+MVABATIM+"/"+MVRECANT+"/"+MVPAGANT
							    RecLock("TRB4",.F.)
					   	   			TRB4->FJ3_REC -= nSaldo
								TRB4->(MsUnLock())
							Else
								RecLock("TRB4",.F.)
					   	   			TRB4->FJ3_REC += nSaldo
								TRB4->(MsUnLock())
							EndIf
						Else
							IF TRB3->E1_TIPO $ MVABATIM+"/"+MV_CRNEG
								RecLock("TRB4",.F.)
					   	   			TRB4->FJ3_REC -= nSaldo
								TRB4->(MsUnLock())
							Else
								RecLock("TRB4",.F.)
					   	   			TRB4->FJ3_REC += nSaldo
								TRB4->(MsUnLock())
							EndIf
						EndIf
					Endif          
					
					cSuperior := TRB4->FJ3_CTASUP // Conta Superior
					cIdenti	  := TRB4->FJ3_IDENT // Somar ou Subtrair
					nCont     := TRB4->(Recno())
	
					//Procurar nas superiores e somar ou subtrair
					Do While (!Empty(cSuperior)) 
					                        
						//Somar ou Subtrair conforme campo FJ3_IDENTI
						If (cSuperior == TRB4->FJ3_CONTAG)
							If (cIdenti == '1')
							   	RecLock("TRB4",.F.)
								   	TRB4->FJ3_REC += nSaldo
							  	TRB4->(MsUnLock())
							Else
							   	RecLock("TRB4",.F.)
								  	TRB4->FJ3_REC -= nSaldo
							   	TRB4->(MsUnLock())
							EndIf
						EndIf 
						
						cSuperior := TRB4->FJ3_CTASUP
						TRB4->(dbSkip(-1))
					EndDo
					
					TRB4->(dbGoto(nCont))// Posiciona no ultimo registro
	
				EndIf
				
				TRB3->(dbSkip())
			EndDo
			
		EndIf		
		
	    TRB4->(dbSkip())	     
	    
	   If !(TRB4->(EOF()))
	    	If (TRB2->(EOF()))
	       		TRB2->(dbGoTop()) //Inicia o arquivo de SE2 novamente pois o arquivo de visao nao esta no fim
	     	EndIf
	     	
	       	If (TRB3->(EOF()))
	       		TRB3->(dbGoTop()) //Inicia o arquivo de SE1 novamente pois o arquivo de visao nao esta no fim
	       	EndIf	
	    EndIf
	
	EndDo
	
	    
    dbSelectArea("TRB4")
    TRB4->(dbGoTop()) 
       		
       		//Calcular o DISPON de todas as contas (Recebido - Pago)
   	Do While (TRB4->(!EOF()))
    		
       	RecLock("TRB4",.F.)
    	   	TRB4->FJ3_DISP = TRB4->FJ3_REC - TRB4->FJ3_PAGO
    	   	//Com saldo bancario
    	   	TRB4->FJ3_DISP += nDispon
      	TRB4->(MsUnLock())
    		
    	TRB4->(dbSkip())
    EndDo
	    	    
    TRB4->(dbGoTop())
	    	
    	//Calculo das formulas digitadas pelo usuario
   	Do While (TRB4->(!EOF()))  
    	
    	If (!Empty(TRB4->FJ3_SEDINI) .And. !Empty(TRB4->FJ3_SEDFIM)) //Soh entra nas analiticas  
		    	
	    	CNICalc140() 
	    EndIf
	    	
	   	TRB4->(dbSkip()) 
	EndDo
	    	    
   	TRB4->(dbGoTop())
	    		 	
   	Do While (TRB4->(!EOF())) 
    	// Soh imprimir se a linha estiver como SIM no VISENT
       	If (TRB4->FJ3_VISENT == '1')
	    		// Incluir no arquivo de trabalho para impressão na tela
    	   	RecLock("cArqTmp",.T.)
    			CARQTMP->CODDESC    := "00/00/0000"+" "+Space(TRB4->FJ3_COLUNA)+TRB4->FJ3_DESCCG
	   			CARQTMP->RECEBIDOS  := TRB4->FJ3_REC
	   			CARQTMP->PAGOS      := TRB4->FJ3_PAGO
	   			CARQTMP->DISPON 	:= TRB4->FJ3_DISP   
	   			CARQTMP->DATAAN 	:= dDataAnt
	   			CARQTMP->ORDEM 		:= TRB4->FJ3_ORDEM
       		TRB4->(MsUnLock())
       	EndIf  
    		
   		RecLock("TRB4",.F.)	
    		//Inicializo os campos utilizados
    		TRB4->FJ3_REC  := 0 
   			TRB4->FJ3_PAGO := 0
   			TRB4->FJ3_DISP := 0 
   		TRB4->(MsUnLock())
    		
    	TRB4->(dbSkip())
   	EndDo
    		
 	TRB4->(dbGoTop())// Comecar de novo
	     
	
	dbSelectArea("FJ3")
	dbSetOrder(1)
	dbGoTop()
	
	dbSelectArea("cArqTmp")
	dbSetOrder(1)
	dbGoTop()  
	
	//Soma o Total Geral(Recebido, pago e DISPON)
	Do While (CARQTMP->(!EOF()))
	
		nTotRec  := 0
		nTotPago := 0
		nTotDisp := 0
	
	   	cData := SubStr(CARQTMP->CODDESC,1,10) 
	   	nRec := CARQTMP->(Recno())
	
		Do While(cData == SubStr(CARQTMP->CODDESC,1,10))
		
			If FJ3->(dbSeek(xFilial("FJ3")+MV_PAR20+AllTrim(CARQTMP->ORDEM))) 
				//Se nao tiver entidade superior deve ser somada
				If (Empty(FJ3->FJ3_CTASUP) .And. FJ3->FJ3_TOTVIS == '2')
					//Se for debito
				 //	If(FJ3->FJ3_NORMAL == '1')
						nTotRec  += CARQTMP->RECEBIDOS
						nTotPago += CARQTMP->PAGOS
						nTotDisp += CARQTMP->DISPON
				  /*	Else //Se for credito
						nTotRec  += (CARQTMP->RECEBIDOS * -1)
						nTotPago += (CARQTMP->PAGOS * -1)
						nTotDisp += (CARQTMP->DISPON * -1)
					EndIf */
				EndIf
			EndIf 
			
			CARQTMP->(dbSkip())
		EndDo 
		
		CARQTMP->(dbGoto(nRec))//Volta para o primeiro registro da data selecionada 
		cData := SubStr(CARQTMP->CODDESC,1,10)
		
		Do While(cData == SubStr(CARQTMP->CODDESC,1,10))
		   
			If FJ3->(dbSeek(xFilial("FJ3")+MV_PAR20+AllTrim(CARQTMP->ORDEM))) 
				If (Empty(FJ3->FJ3_CTASUP) .And. FJ3->FJ3_TOTVIS == '1') // Totaliza na entidade totalizadora por data
					RecLock("cArqTmp",.F.)
						CARQTMP->RECEBIDOS := nTotRec
						CARQTMP->PAGOS := nTotPago
						CARQTMP->DISPON := nTotDisp
					MsUnLock() 
				EndIf
			EndIf
			
			CARQTMP->(dbSkip())
		EndDo
	EndDo
	
EndIf
	
	dbSelectArea("SE1")//Receber 
	dbGoTop()

	dbSelectArea("SE2")//Pagar
	dbGoTop()
	
	dbSelectArea("TRB4")
	dbGoTop()

	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento de recebidos, pagos e DISPON de Titulos que irão vencer   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Do While (dDataAnt <= dDataAte)
	    
	    // Se for analitica -  busco por naturezas
		If (!Empty(TRB4->FJ3_SEDINI) .And. !Empty(TRB4->FJ3_SEDFIM))  
			
			Do While (SE2->(!EOF()))
			
				nSaldo := 0
				
				IF mv_par03 == 1 .and. SE2->E2_FILIAL != cFilSE2
					Exit
				EndIF
				
				If SE2->E2_SALDO == 0 .and. IIf(mv_par11==1,SE2->E2_BAIXA <= dDataBase,.t.)
					SE2->(dbSkip())
					Loop
				End
				
		        If mv_par12 = 2
		           If SE2->E2_MOEDA != nMoeda   
		              SE2->(dbSkip())
		              Loop
		           EndIf
		        EndIf 
		        
				
			    //Confere a natureza do registro SE5 E se a data eh a do dia processado
				If ((AllTrim(SE2->E2_NATUREZ) >= AllTrim(TRB4->FJ3_SEDINI) .And. AllTrim(SE2->E2_NATUREZ) <= AllTrim(TRB4->FJ3_SEDFIM)) .And. SE2->E2_VENCREA == dDataAnt)
					
					nSaldup := 0
					
					If SE2->E2_BAIXA > dDataBase .And. mv_par11 == 1
						nSaldup:=SaldoTit(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_NATUREZ,"P",SE2->E2_FORNECE,mv_par02,SE2->E2_VENCREA,dDataBase,SE2->E2_LOJA,,If(cPaisLoc=="BRA",SE2->E2_TXMOEDA,0))
					Else
						// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
						lTxMoeda := SM2->(MsSeek(SE2->E2_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
						nSaldup:=xMoeda((SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE),SE2->E2_MOEDA,mv_par02,,,If(cPaisLoc=="BRA",SE2->E2_TXMOEDA,0))
					End
					
					IF mv_par13 == 2 .And. SE2->E2_TIPO $ MVABATIM
						SE2->(dbSkip())
						Loop
					End
					If SE2->E2_TIPO $ MVPAGANT
						SE2->(dbSkip())
						Loop
					Endif
					
					IF SE2->E2_PREFIXO < mv_par09 .or. SE2->E2_PREFIXO > mv_par10  //Do Prefixo ao Prefixo
						SE2->(dbSkip())
						Loop
					EndIF
					
					If ! ( AllTrim(Str(SE2->E2_MOEDA,2)) $ mv_par08 )
						SE2->(dbSkip())
						Loop
					End
					
					If SE2->E2_FLUXO == "N" .or. (SE2->E2_EMISSAO > dDataBase .and. mv_par14 == 2)
						SE2->(dbSkip())
						Loop
					End 
					
					nAbatim := 0
					If mv_par13 == 2
			
						//Quando considerar Titulos com emissao futura, eh necessario
						//colocar-se a database para o futuro de forma que a Somaabat()
						//considere os titulos de abatimento
						If mv_par14 == 1
							dOldData := dDataBase
							dDataBase := CTOD("31/12/40")
						Endif
			
						nAbatim := SomaAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"P",mv_par02,,SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_FILIAL)
			
						If mv_par14 == 1
							dDataBase := dOldData
						Endif
			
					Endif
						
					nSaldup -= nAbatim
                    
    				RecLock("TRB4",.F.)
						IF cPaisLoc <> "BRA" .And. E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
							TRB4->FJ3_PAGO += (nSalDup * -1)
						Else
							TRB4->FJ3_PAGO += nSalDup
						Endif 
					TRB4->(MsUnLock())
								
					cSuperior := TRB4->FJ3_CTASUP // Conta Superior
					cIdenti	  := TRB4->FJ3_IDENT // Somar ou Subtrair
					nCont     := TRB4->(Recno())
	
					//Procurar nas superiores e somar ou subtrair
					Do While (!Empty(cSuperior)) 
					                        
						//Somar ou Subtrair conforme campo FJ3_IDENTI
						If (cSuperior == TRB4->FJ3_CONTAG)
							If (cIdenti == '1')
							   	RecLock("TRB4",.F.)
								   	TRB4->FJ3_PAGO += nSalDup
							  	TRB4->(MsUnLock())
							Else
							   	RecLock("TRB4",.F.)
								  	TRB4->FJ3_PAGO -= nSalDup
							   	TRB4->(MsUnLock())
							EndIf
						EndIf 
						
						cSuperior := TRB4->FJ3_CTASUP
						TRB4->(dbSkip(-1))
					EndDo
					
					TRB4->(dbGoto(nCont))// Posiciona no ultimo registro
	
				EndIf
				
				SE2->(dbSkip())
			EndDo 
			
			//Contas a receber
			Do While (SE1->(!EOF()))
			
				nSaldo := 0 		
				
				IF mv_par03 == 1 .and. SE1->E1_FILIAL != cFilSE1
					Exit
				EndIF
				
				If SE1->E1_TIPO $ MVRECANT
					SE1->(dbSkip())
					Loop
				Endif
				
				IF SE1->E1_PREFIXO < mv_par09 .or. SE1->E1_PREFIXO > mv_par10  //Do Prefixo ao Prefixo
					SE1->(dbSkip())
					Loop
				EndIF
				
				If ! ( AllTrim(Str(SE1->E1_MOEDA,2)) $ mv_par08 )
					SE1->(dbSkip())
					Loop
				EndIf
				
				If SE1->E1_FLUXO == "N" .or. (SE1->E1_EMISSAO > dDatabase .and. mv_par14 == 2)
					SE1->(dbSkip())
					Loop
				EndIf
				
				IF ( SE1->E1_SALDO = 0 .and. IIF( mv_par11 == 1, SE1->E1_BAIXA <= dDataBase, .T. )  ) .or. SE1->E1_SITUACA $ cListDesc  //SITCOB
					SE1->(dbSkip())
					Loop
				EndIF
			
				IF mv_par13 == 2 .And. SE1->E1_TIPO $ MVABATIM
					SE1->(dbSkip())
					Loop
				EndIf 
		        If mv_par12 = 2
		           If SE1->E1_MOEDA != nMoeda   
		              SE1->(dbSkip())
		              Loop
		           EndIf
		        EndIf 
		        
		        nSaldup := 0
			
			    //Confere a natureza do registro SE5 E se a data eh a do dia processado
				If ((AllTrim(SE1->E1_NATUREZ) >= AllTrim(TRB4->FJ3_SEDINI) .And. AllTrim(SE1->E1_NATUREZ) <= AllTrim(TRB4->FJ3_SEDFIM)) .And. SE1->E1_VENCREA == dDataAnt)
					
					If mv_par11 == 1
						nSaldup := SaldoTit(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_NATUREZ,"R",SE1->E1_CLIENTE,mv_par02,SE1->E1_VENCREA,dDataBase,SE1->E1_LOJA,,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0), mv_par17)
					Else
						// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
						lTxMoeda := SM2->(MsSeek(SE1->E1_VENCREA)) .And. SM2->&("M2_MOEDA"+Alltrim(Str(mv_par02))) != 0
						nSaldup  := xMoeda((SE1->E1_SALDO+SE1->E1_SDACRES-SE1->E1_SDDECRE),SE1->E1_MOEDA,mv_par02,If(lTxMoeda,SE1->E1_VENCREA,dDataBase),nDecs+1,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0))
					End
		
					// Se titulo do Template GEM
					If HasTemplate("LOT")  .And. !Empty(SE1->E1_NCONTR)
						If SE1->E1_VALOR == SE1->E1_SALDO .Or.;
							SE1->E1_VALOR == nSaldup //o titulo pode estar quitado(e1_saldo=0) mas valor em datas retroativas nao, portanto devera somar o valor do gem
							nSaldup += CMDtPrc(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_VENCREA,SE1->E1_VENCREA)[2]
						EndIf
					EndIf
		
					nAbatim := 0 
					If mv_par13 == 2
						If mv_par14 == 1
							dOldData := dDataBase
							dDataBase := CTOD("31/12/40")
						Endif
		
						nAbatim := SomaAbat(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,"R",mv_par02,,SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_FILIAL)
		
						If mv_par14 == 1
							dDataBase := dOldData
						Endif
		
					Endif	
					nSalDup -= nAbatim
					
					RecLock("TRB4",.F.)
						TRB4->FJ3_REC += nSalDup
					TRB4->(MsUnLock())          
					
					cSuperior := TRB4->FJ3_CTASUP // Conta Superior
					cIdenti	  := TRB4->FJ3_IDENT // Somar ou Subtrair
					nCont     := TRB4->(Recno())
	
					//Procurar nas superiores e somar ou subtrair
					Do While (!Empty(cSuperior)) 
					                        
						//Somar ou Subtrair conforme campo FJ3_IDENTI
						If (cSuperior == TRB4->FJ3_CONTAG)
							If (cIdenti == '1')
							   	RecLock("TRB4",.F.)
								   	TRB4->FJ3_REC += nSalDup
							  	TRB4->(MsUnLock())
							Else
							   	RecLock("TRB4",.F.)
								  	TRB4->FJ3_REC -= nSalDup
							   	TRB4->(MsUnLock())
							EndIf
						EndIf 
						
						cSuperior := TRB4->FJ3_CTASUP
						TRB4->(dbSkip(-1))
					EndDo
					
					TRB4->(dbGoto(nCont))// Posiciona no ultimo registro
	
				EndIf
				
				SE1->(dbSkip())
			EndDo
			
		EndIf		
		
	    TRB4->(dbSkip())
	    
	    If (TRB4->(EOF()))
	     
	    	dbSelectArea("TRB4")
	    	If (dDataAnt <= dDataAte)
	       		TRB4->(dbGoTop()) 
	       		
	       		//Calcular o DISPON de todas as contas (Recebido - Pago)
	    		Do While (TRB4->(!EOF()))
		    		
		    	   	RecLock("TRB4",.F.)
		    		   	TRB4->FJ3_DISP = TRB4->FJ3_REC - TRB4->FJ3_PAGO
		    		   	//Com saldo bancario
		    		   	   TRB4->FJ3_DISP += nDispon
		    	  	TRB4->(MsUnLock())
		    		
		    		TRB4->(dbSkip())
		    	EndDo
		    	    
		    	TRB4->(dbGoTop())
		    	
		    	//Calculo das formulas digitadas pelo usuario
		    	Do While (TRB4->(!EOF()))  
		    	
		    		If (!Empty(TRB4->FJ3_SEDINI) .And. !Empty(TRB4->FJ3_SEDFIM)) //Soh entra nas analiticas  
				    	
				    	CNICalc140() 
				    EndIf
			    	
			    	TRB4->(dbSkip()) 
			    EndDo
		    	    
		    	TRB4->(dbGoTop())
		    		 	
		    	Do While (TRB4->(!EOF())) 
		    	
	    			// Soh imprimir se a linha estiver como SIM no VISENT
	    	   		If (TRB4->FJ3_VISENT == '1')
			    		// Incluir no arquivo de trabalho para impressão na tela
			    	   	RecLock("cArqTmp",.T.)
			    			CARQTMP->CODDESC    := DTOC(dDataAnt)+" "+Space(TRB4->FJ3_COLUNA)+TRB4->FJ3_DESCCG
			    			CARQTMP->RECEBIDOS  := TRB4->FJ3_REC
			    			CARQTMP->PAGOS      := TRB4->FJ3_PAGO
			    			CARQTMP->DISPON 	:= TRB4->FJ3_DISP   
			    			CARQTMP->DATAAN 	:= dDataAnt//DTOC(dDataAnt)
			    			CARQTMP->ORDEM 		:= TRB4->FJ3_ORDEM
		    	   		MsUnLock()
		    	   	EndIf  
		    		
		    		RecLock("TRB4",.F.)	
		    			//Inicializo os campos utilizados
		    			TRB4->FJ3_REC  := 0 
		    			TRB4->FJ3_PAGO := 0
		    			TRB4->FJ3_DISP := 0 
		    		TRB4->(MsUnLock())
		    		
		    		TRB4->(dbSkip())
	    		EndDo
	    		
	    		TRB4->(dbGoTop())// Comecar de novo 
	    		SE2->(dbGoTop())
	    	EndIf 
	    	
	    	dDataAnt := dDataAnt + 1//soma 1 dia na data anterior
	    Else
	    	If (SE2->(EOF()))
	       		SE2->(dbGoTop()) //Inicia o arquivo de SE2 novamente pois o arquivo de visao nao esta no fim
	     	EndIf
	     	
	       	If (SE1->(EOF()))
	       		SE1->(dbGoTop()) //Inicia o arquivo de SE2 novamente pois o arquivo de visao nao esta no fim
	       	EndIf	
	    EndIf
	
	EndDo 
	
	dbSelectArea("FJ3")
	dbSetOrder(1)
	dbGoTop()
	
	dbSelectArea("cArqTmp")
	dbSetOrder(1)
	dbGoTop()  
	
	//Soma o Total Geral(Recebido, pago e DISPON)
	Do While (CARQTMP->(!EOF()))
	
		nTotRec  := 0
		nTotPago := 0
		nTotDisp := 0
	
	   	cData := SubStr(CARQTMP->CODDESC,1,10) 
	   	nRec := CARQTMP->(Recno())
	
		Do While(cData == SubStr(CARQTMP->CODDESC,1,10))
		
			If FJ3->(dbSeek(xFilial("FJ3")+MV_PAR20+AllTrim(CARQTMP->ORDEM))) 
				//Se nao tiver entidade superior deve ser somada
				If (Empty(FJ3->FJ3_CTASUP) .And. FJ3->FJ3_TOTVIS == '2')
					//Se for debito
				  //	If(FJ3->FJ3_NORMAL == '1')
						nTotRec  += CARQTMP->RECEBIDOS
						nTotPago += CARQTMP->PAGOS
						nTotDisp += CARQTMP->DISPON
				 /*	Else //Se for credito
						nTotRec  += (CARQTMP->RECEBIDOS * -1)
						nTotPago += (CARQTMP->PAGOS * -1)
						nTotDisp += (CARQTMP->DISPON * -1)
					EndIf*/
				EndIf
			EndIf 
			
			CARQTMP->(dbSkip())
		EndDo 
		
		CARQTMP->(dbGoto(nRec))//Volta para o primeiro registro da data selecionada 
		cData := SubStr(CARQTMP->CODDESC,1,10)
		
		Do While(cData == SubStr(CARQTMP->CODDESC,1,10))
		   
			If FJ3->(dbSeek(xFilial("FJ3")+MV_PAR20+AllTrim(CARQTMP->ORDEM))) 
				If (Empty(FJ3->FJ3_CTASUP) .And. FJ3->FJ3_TOTVIS == '1') // Totaliza na entidade totalizadora por data
					RecLock("cArqTmp",.F.)
						CARQTMP->RECEBIDOS := nTotRec
						CARQTMP->PAGOS := nTotPago
						CARQTMP->DISPON := nTotDisp
					MsUnLock() 
				EndIf
			EndIf
			
			CARQTMP->(dbSkip())
		EndDo
	EndDo
	  	
	If (mv_par06 == 1)
		TRB2->(dbCloseArea()) 
		TRB3->(dbCloseArea())
	EndIf
	
	TRB4->(dbCloseArea())  

	If _oFINR1402 <> Nil
		_oFINR1402:Delete()
		_oFINR1402 := Nil
	Endif	
	 
Return        

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ListaES    ³ Autor ³ Andrea Verissimo      ³ Data ³17/12/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄ--ÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Essa funcao checa se o registro tem algum movimento bancario ³±±
±±³          ³do tipo ES.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.F. - em caso de nao listar o titulo pq ele tem ESTORNO.     ³±±
±±³          ³.T. - listar o titulo pq nao tenho ESTORNO.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nro da Filial, Prefixo, Numero, Parcela                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ListaES(cChavES)
Local cRetorno := .T.
Local aArea    := GetArea()	     

Static cAliasListaES := Nil

If cAliasListaES == Nil
	cAliasListaES := Criatrab(,.F.)
Endif

Default cChavES := ""

If !Empty(cChavES)
	BeginSql Alias cAliasListaES   
		SELECT SE5.E5_FILIAL, SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_PARCELA
		  FROM %table:SE5% SE5
		 WHERE SE5.E5_FILIAL + SE5.E5_PREFIXO + SE5.E5_NUMERO + SE5.E5_PARCELA = %exp:cChavES%
		   AND SE5.E5_TIPODOC = "ES"
		   AND SE5.%notDel%    
		 ORDER BY %Order:SE5% 
	EndSql 
	
	If !(cAliasListaES)->(Eof())
		cRetorno := .F. 
	EndIf
	
	(cAliasListaES)->(DbCloseArea())
Endif

RestArea(aArea)

Return (cRetorno)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINR770   ºAutor  ³Microsiga           º Data ³  08/18/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Calcula saldo com base na formula digitada                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CNICalc140 ()
Local cSuperior
Local cIdent
Local nCont
Local nFator

cSuperior := TRB4->FJ3_CTASUP // Conta Superior
cIdenti	  := TRB4->FJ3_IDENT // Somar ou Subtrair
nCont     := TRB4->(Recno())

//Procurar nas superiores e somar ou subtrair
Do While (!Empty(cSuperior)) 
                        
	//Ralizar calculo com a formula digitada pelo usuario
	If (cSuperior == TRB4->FJ3_CONTAG)
			If (Left(TRB4->FJ3_FORMUL, 7) == "ROTINA=")
				nFator := &(Subs(TRB4->FJ3_FORMUL, 8)) 
				
				RecLock("TRB4",.F.)
					TRB4->FJ3_DISP *= nFator 
				TRB4->(MsUnLock())
				
			ElseIf Left(TRB4->FJ3_FORMUL, 6) == "FATOR="
				nFator := &(Subs(TRB4->FJ3_FORMUL, 7))
				
				RecLock("TRB4",.F.)
					TRB4->FJ3_DISP *= nFator 
				TRB4->(MsUnLock())
				
			Elseif Left(TRB4->FJ3_FORMUL,6 ) == "SALDO="		
				nFator := &(Subs(TRB4->FJ3_FORMUL, 7))
				
				RecLock("TRB4",.F.)
					TRB4->FJ3_DISP := nFator 
				TRB4->(MsUnLock())	
				
		    EndIf	 		
	EndIf 
	
	cSuperior := TRB4->FJ3_CTASUP
	TRB4->(dbSkip(-1))
EndDo

TRB4->(dbGoto(nCont))// Posiciona no ultimo registro 

Return





